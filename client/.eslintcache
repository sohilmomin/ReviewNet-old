[{"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\index.js":"1","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\reportWebVitals.js":"2","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\App.js":"3","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\configureStore.js":"4","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\MainComponent.js":"5","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\reviewReducer.js":"6","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\userReducer.js":"7","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\companyReducer.js":"8","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\productReducer.js":"9","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\IndexComponent.js":"10","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanySignupComponent.js":"11","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SignupComponent.js":"12","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\FooterComponent.js":"13","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\LoginComponent.js":"14","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanyLoginComponent.js":"15","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\UserProfileComponent.js":"16","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CatogeryProductComponent.js":"17","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SubCatogeryProductComponent.js":"18","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ContactUsComponent.js":"19","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\AboutUsComponent.js":"20","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\HeaderComponent.js":"21","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\HomeComponent.js":"22","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ProductsComponent.js":"23","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\MyProductsComponent.js":"24","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ProductFormComponent.js":"25","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ReviewsComponent.js":"26","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\ActionCreaters.js":"27","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SidebarComponent.js":"28","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\LoadingComponent.js":"29","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\ActionTypes.js":"30","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\EditorComponent.js":"31","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\shared\\baseUrl.js":"32","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanyProfileComponent.js":"33"},{"size":746,"mtime":1611419755979,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1606579365615,"results":"36","hashOfConfig":"35"},{"size":627,"mtime":1611641188759,"results":"37","hashOfConfig":"35"},{"size":605,"mtime":1611246631290,"results":"38","hashOfConfig":"35"},{"size":12511,"mtime":1614583190471,"results":"39","hashOfConfig":"35"},{"size":1478,"mtime":1613130719750,"results":"40","hashOfConfig":"35"},{"size":796,"mtime":1613642981101,"results":"41","hashOfConfig":"35"},{"size":782,"mtime":1612689184169,"results":"42","hashOfConfig":"35"},{"size":1463,"mtime":1613018065213,"results":"43","hashOfConfig":"35"},{"size":1330,"mtime":1612864730461,"results":"44","hashOfConfig":"35"},{"size":7709,"mtime":1614491372470,"results":"45","hashOfConfig":"35"},{"size":7913,"mtime":1614491372696,"results":"46","hashOfConfig":"35"},{"size":3104,"mtime":1612774801602,"results":"47","hashOfConfig":"35"},{"size":3590,"mtime":1614491372582,"results":"48","hashOfConfig":"35"},{"size":4977,"mtime":1614491372581,"results":"49","hashOfConfig":"35"},{"size":3455,"mtime":1614581413234,"results":"50","hashOfConfig":"35"},{"size":5483,"mtime":1614334207385,"results":"51","hashOfConfig":"35"},{"size":5502,"mtime":1614334207496,"results":"52","hashOfConfig":"35"},{"size":4666,"mtime":1614517563641,"results":"53","hashOfConfig":"35"},{"size":4472,"mtime":1614517563604,"results":"54","hashOfConfig":"35"},{"size":9412,"mtime":1614581330820,"results":"55","hashOfConfig":"35"},{"size":14805,"mtime":1614493376424,"results":"56","hashOfConfig":"35"},{"size":23594,"mtime":1614339967350,"results":"57","hashOfConfig":"35"},{"size":21229,"mtime":1614334207619,"results":"58","hashOfConfig":"35"},{"size":18205,"mtime":1614334825768,"results":"59","hashOfConfig":"35"},{"size":19434,"mtime":1614581734628,"results":"60","hashOfConfig":"35"},{"size":20571,"mtime":1614497058060,"results":"61","hashOfConfig":"35"},{"size":27248,"mtime":1614495813754,"results":"62","hashOfConfig":"35"},{"size":252,"mtime":1607580677953,"results":"63","hashOfConfig":"35"},{"size":792,"mtime":1613114580321,"results":"64","hashOfConfig":"35"},{"size":1898,"mtime":1613666722274,"results":"65","hashOfConfig":"35"},{"size":47,"mtime":1607577159382,"results":"66","hashOfConfig":"35"},{"size":3522,"mtime":1614581240628,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1ca53e8",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"71"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\index.js",["151"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Router } from 'react-router'\nimport createBrowserHistory from 'history/createBrowserHistory'\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["152","153"],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\reportWebVitals.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\App.js",["154"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-quill/dist/quill.bubble.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Router } from 'react-router'\nimport Main from './components/MainComponent'\nimport { configureStore } from './redux/configureStore'\nimport { Provider } from 'react-redux'\nimport createHistory from 'history/createBrowserHistory'\nexport const history = createHistory()\nconst store = configureStore()\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Main />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\configureStore.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\MainComponent.js",["155","156"],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\reviewReducer.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\userReducer.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\companyReducer.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\productReducer.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\IndexComponent.js",["157","158"],"import React, { Component } from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            content: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(value) {\r\n        console.log(value)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <div className='row index'>\r\n                        <div className='col-12 col-md-6 mt-lg-4 pt-lg-5'>\r\n                            <h1 className='index-heading mt-4 pt-4'>Everything <br /> that can be sold <br /> in the world, <br />can be reviewed</h1>\r\n                            <button className='explore-product-btn' onClick={() => { this.props.history.push('/products') }}>Explore Products! <i class=\"fa fa-space-shuttle\" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                        <div className='col-12 col-md-6'>\r\n                            <img className=\"img img-responsive \" src=\"/assets/images/rating.jpg\" alt=\"Card image \" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Index","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanySignupComponent.js",["159","160","161","162","163"],"import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button, Row, Col } from 'reactstrap'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst minLength = (len) => (value) => !value || value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\n\r\nexport default class CompanySignup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        this.props.companySignUp(values.name, values.email, values.password, values.fullname)\r\n        console.log(values)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='auth-page'>\r\n                <div className='container'>\r\n                    <div className='row '>\r\n                        <div className='auth-box col-lg-4 col-md-7 col-sm-9 col-11 p-10 ml-auto mr-auto  mt-4 mb-4 pt-2 pb-2  text-white'>\r\n                            <h3 className='text-center'>Company Signup</h3>\r\n                            <LocalForm onSubmit={this.handleSubmit} row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.fullname'>Full Name</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.fullname'\r\n                                            id='fullname'\r\n                                            className='form-control'\r\n                                            placeholder='Apple Inc.'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(40) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.fullname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 40 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.name'>Username</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.name'\r\n                                            id='name'\r\n                                            className='form-control'\r\n                                            placeholder='apple (unique)'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(30) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.name'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.email'>Email</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.email'\r\n                                            id='email'\r\n                                            className='form-control'\r\n                                            placeholder='info@apple.com'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(30) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.email'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.password'>Password</Label>\r\n                                    <Col md={12}>\r\n                                        <Control type='password' model='.password'\r\n                                            id='password'\r\n                                            className='form-control'\r\n                                            placeholder='Enter password here'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(30) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.password'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                    <Col md={{ size: 12 }} className='text-center'>\r\n                                        <Button type='submit' color=\"primary\">Submit</Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </LocalForm>\r\n                            <div className='row'>\r\n                                <div className='col-7'>\r\n                                    <Link to='/company/signin' className='auth-link'>Already have an account?</Link>\r\n                                </div>\r\n                                <div className='col-5'>\r\n                                    <Link to='/notavaliable' className='auth-link'>Forget password?</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SignupComponent.js",["164","165","166","167","168","169"],"import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button, Row, Col } from 'reactstrap'\r\nimport { LocalForm, Control, Errors, controls } from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst minLength = (len) => (value) => !value || value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\nexport default class Signup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        this.props.signUp(values.name, values.email, values.password, values.fullname)\r\n        console.log(values)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='auth-page' >\r\n                <div className='container'>\r\n                    <div className='row '>\r\n                        <div className='auth-box col-lg-4 col-md-7 col-sm-9 col-11 p-10 ml-auto mr-auto  mt-4 mb-4 pt-2 pb-2  text-white'>\r\n                            <h3 className='text-center'>Signup</h3>\r\n                            <LocalForm onSubmit={this.handleSubmit} row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.fullname'>Full name</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.fullname'\r\n                                            id='fullname'\r\n                                            className='form-control'\r\n                                            placeholder='Walter White'\r\n                                            validators={{ minLength: minLength(3), maxLength: maxLength(30) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.fullname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.name'>Username</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.name'\r\n                                            id='name'\r\n                                            className='form-control'\r\n                                            placeholder='walter.white (unique)'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.name'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required, ',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 15 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.email'>Email</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.email'\r\n                                            id='email'\r\n                                            className='form-control'\r\n                                            placeholder='walter@example.com'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(40) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.email'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required, ',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 40 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.password'>Password</Label>\r\n                                    <Col md={12}>\r\n                                        <Control type='password' model='.password'\r\n                                            id='password'\r\n                                            className='form-control'\r\n                                            placeholder='password'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(30) }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.password'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required, ',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                    <Col md={{ size: 12 }} className='text-center'>\r\n                                        <Button type='submit' color=\"primary\">Submit</Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </LocalForm>\r\n                            <div className='row'>\r\n                                <div className='col-7'>\r\n                                    <Link to='/signin' className='auth-link'>Already have an account?</Link>\r\n                                </div>\r\n                                <div className='col-5'>\r\n                                    <Link to='/notavaliable' className='auth-link'>Forget password?</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 '>\r\n                                    <Link to='/company/signup' className='auth-link'>Signup for Company</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\FooterComponent.js",["170","171","172","173","174","175"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center pt-2\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\" className='auth-link'>Home</Link></li>\r\n                            <li><Link to=\"/products\" className='auth-link'>Products</Link ></li>\r\n                            <li><Link to=\"/aboutus\" className='auth-link'>About</Link ></li>\r\n                            <li><Link to=\"/contactus\" className='auth-link'>Contact</Link ></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            G321, HoR Men<br />\r\n\t\t              DAIICT, Gandhinagar<br />\r\n\t\t              Gujarat, INDIA<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +91 9898 140 595<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +91 84 6000 4309<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a className='auth-link' href=\"mailto:info@review.net\">\r\n                                info@review.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon \" target=\"_blank\" href=\"https://github.com/sohilmomin\"><i className=\"fa fa-github social-icon\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" target=\"_blank\" href=\"https://www.instagram.com/this.sohil/\"><i className=\"fa fa-instagram social-icon\"></i></a>\r\n                            <a className=\"btn btn-social-icon \" target=\"_blank\" href=\"https://www.linkedin.com/in/mohamadsohil-momin\"><i className=\"fa fa-linkedin social-icon\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" target=\"_blank\" href=\"https://twitter.com/this_sohil\"><i className=\"fa fa-twitter social-icon\"></i></a>\r\n                            <a className=\"btn btn-social-icon \" target=\"_blank\" href=\"https://www.youtube.com/channel/UC0KkLRY55KPim6CZuMCSk6w\"><i className=\"fa fa-youtube social-icon\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" target=\"_blank\" href=\"mailto:sohilmomin711@gmail.com\"><i className=\"fa fa-envelope-o social-icon\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2021 Review Net </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\LoginComponent.js",["176","177","178","179","180","181"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Form, FormGroup, Label, Input, Button, Row, Col } from 'reactstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Link } from 'react-router-dom'\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        this.props.signIn(values.email, values.password);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='auth-page'>\r\n                <div className='container'>\r\n                    <div className='row '>\r\n                        <div className='auth-box col-lg-4 col-md-7 col-sm-9 col-11 p-10 ml-auto mr-auto  mt-4 mb-4 pt-2 pb-2  text-white'>\r\n                            <h3 className='text-center'>Login</h3>\r\n                            <LocalForm onSubmit={this.handleSubmit} row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.email'>Email</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.email'\r\n                                            id='email'\r\n                                            className='form-control'\r\n                                            placeholder='walter@example.com'\r\n\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.password'>Password</Label>\r\n                                    <Col md={12}>\r\n                                        <Control type='password' model='.password'\r\n                                            id='password'\r\n                                            className='form-control'\r\n                                            placeholder='password'\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                    <Col md={{ size: 12 }} className='text-center'>\r\n                                        <Button type='submit' color=\"primary\">Submit</Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </LocalForm>\r\n                            <div className='row'>\r\n                                <div className='col-7'>\r\n                                    <Link to='/signup' className='auth-link'>Don't have an account?</Link>\r\n                                </div>\r\n                                <div className='col-5'>\r\n                                    <Link to='/notavaliable' className='auth-link'>Forget password?</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 '>\r\n                                    <Link to='/company/signin' className='auth-link'>Login for Company</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login)","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanyLoginComponent.js",["182","183","184"],"import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button, Row, Col } from 'reactstrap'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst minLength = (len) => (value) => !value || value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\n\r\nclass CompanyLogin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        this.props.companySignIn(values.email, values.password)\r\n        console.log(\" going from component \" + values)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='auth-page'>\r\n                <div className='container'>\r\n                    <div className='row '>\r\n                        <div className='auth-box col-lg-4 col-md-7 col-sm-9 col-11 p-10 ml-auto mr-auto  mt-4 mb-4 pt-2 pb-2  text-white'>\r\n                            <h3 className='text-center'>Company Login</h3>\r\n                            <LocalForm onSubmit={this.handleSubmit} row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.email'>Email</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model='.email'\r\n                                            id='email'\r\n                                            className='form-control'\r\n                                            placeholder='info@apple.com'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(30) }}\r\n\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.email'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 30 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label md={12} htmlFor='.password'>Password</Label>\r\n                                    <Col md={12}>\r\n                                        <Control type='password' model='.password'\r\n                                            id='password'\r\n                                            className='form-control'\r\n                                            placeholder='Enter password here'\r\n                                            validators={{ required, minLength: minLength(3), maxLength: maxLength(40) }}\r\n\r\n                                        />\r\n                                        <Errors\r\n                                            className='form-error'\r\n                                            model='.password'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be at least 3 character long ',\r\n                                                maxLength: 'Must be at most 40 character long '\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                    <Col md={{ size: 12 }} className='text-center'>\r\n                                        <Button type='submit' color=\"primary\">Submit</Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </LocalForm>\r\n                            <div className='row'>\r\n                                <div className='col-7'>\r\n                                    <Link to='/company/signup' className='auth-link'>Don't have an account?</Link>\r\n                                </div>\r\n                                <div className='col-5'>\r\n                                    <Link to='/notavaliable' className='auth-link'>Forget password?</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CompanyLogin","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\UserProfileComponent.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CatogeryProductComponent.js",["185","186","187","188","189"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardText, Button, CardBody } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.routeChange = this.routeChange.bind(this)\r\n    }\r\n    routeChange(productId) {\r\n        let path = '/reviews?product=' + productId;\r\n        this.props.history.push(path);\r\n    }\r\n    render() {\r\n        const product = this.props.product\r\n        const productPic = product.pic || \"https://res.cloudinary.com/sohil/image/upload/v1599586001/zwjupmysyf20v3yfpfus.jpg\"\r\n        return (\r\n            <Card className='col-lg-3 col-md-4 col-sm-6 col-12 m-md-0 pl-0 pr-0 m-auto'>\r\n                <div className='image'>\r\n                    <img className=\"img img-responsive thumb product-image\" src={productPic} alt=\"Card image \" />\r\n                </div>\r\n                <CardBody >\r\n                    <h2 className='product-card-title' data-tip={product.productName} data-for=\"producttitle\">{product.productName}\r\n                    </h2>\r\n                    <ReactTooltip effect=\"float\" id=\"producttitle\" type=\"warning\" />\r\n                    <span>\r\n                        {\r\n                            isNaN(product.averageReview)\r\n                                ? <span className='product-review'></span>\r\n                                : <span className='product-review review-rating'>{product.averageReview}<span className='fa fa-star small-star'></span></span>\r\n                        }\r\n                        <span className='no-of-reviews'> {this.props.noOfreviews} {this.props.noOfreviews > 1 ? <span className='no-of-reviews'> Reviews</span> : <span>Review</span>} </span>\r\n                    </span>\r\n                    <div className='row' >\r\n                        <div className='col-md-6 col-12 text-muted company-name pb-1'>\r\n                            {product.company.fullname}\r\n                        </div>\r\n                        <div className='col-md-6 col-12'>\r\n                            {product.price} Rs.\r\n                            </div>\r\n                    </div>\r\n                    <div className='review-tags'>\r\n                        <p className='product-subcatogery review-tag'>{product.subCatogery[0]}</p>\r\n                    </div>\r\n                    <Button className='explore-review-button' onClick={() => this.routeChange(product._id)}>Explore All Reviews</Button>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nclass CatogeryProducts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.avgReview = this.avgReview.bind(this)\r\n    }\r\n    avgReview(reviews) {\r\n        var reviewSum = 0;\r\n        var totalReviews = 0;\r\n        for (var i = 0; i < reviews.length; i++) {\r\n            reviewSum = reviewSum + reviews[i].rating;\r\n            totalReviews = totalReviews + 1;\r\n        }\r\n        return (reviewSum / totalReviews);\r\n    }\r\n    render() {\r\n        if (this.props.products.isLoading) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.products.errMess) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <p>{this.props.products.errMess}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            const catogery = window.location.pathname.split('/')[3]\r\n            const productsList = this.props.products.products.filter(product => product.catogery.includes(catogery) === true)\r\n            const products = productsList.map((product) => {\r\n                var averageReview = 0\r\n                if (this.props.reviews.reviews.length > 0) {\r\n                    averageReview = this.props.reviews.reviews.filter(review => review.product === product._id)\r\n                    averageReview = this.avgReview(averageReview);\r\n                }\r\n                product.averageReview = averageReview.toFixed(1)\r\n                return (\r\n                    <Product product={product} history={this.props.history} noOfreviews={this.props.reviews.reviews.filter(review => review.product === product._id).length} />\r\n                )\r\n            })\r\n            return (\r\n                <div className='container-fluid'>\r\n                    <h1>Products</h1>\r\n                    {products.length === 0 ?\r\n                        <div className='row'>\r\n                            <div className='col-12 text-center'>\r\n                                <h2 className='no-product-msg'>No product for this catogery.</h2>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='row'>\r\n                            {products}\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default withRouter(CatogeryProducts);","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SubCatogeryProductComponent.js",["190","191","192","193","194"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardText, Button, CardBody } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.routeChange = this.routeChange.bind(this)\r\n    }\r\n    routeChange(productId) {\r\n        let path = '/reviews?product=' + productId;\r\n        this.props.history.push(path);\r\n    }\r\n    render() {\r\n        const product = this.props.product\r\n        const productPic = product.pic || \"https://res.cloudinary.com/sohil/image/upload/v1599586001/zwjupmysyf20v3yfpfus.jpg\"\r\n        return (\r\n            <Card className='col-lg-3 col-md-4 col-sm-6 col-12 m-md-0 pl-0 pr-0 m-auto'>\r\n                <div className='image'>\r\n                    <img className=\"img img-responsive thumb product-image\" src={productPic} alt=\"Card image \" />\r\n                </div>\r\n                <CardBody >\r\n                    <h2 className='product-card-title' data-tip={product.productName} data-for=\"producttitle\">{product.productName}\r\n                    </h2>\r\n                    <ReactTooltip effect=\"float\" id=\"producttitle\" type=\"warning\" />\r\n                    <span>\r\n                        {\r\n                            isNaN(product.averageReview)\r\n                                ? <span className='product-review'></span>\r\n                                : <span className='product-review review-rating'>{product.averageReview}<span className='fa fa-star small-star'></span></span>\r\n                        }\r\n                        <span className='no-of-reviews'> {this.props.noOfreviews} {this.props.noOfreviews > 1 ? <span className='no-of-reviews'> Reviews</span> : <span>Review</span>} </span>\r\n                    </span>\r\n                    <div className='row' >\r\n                        <div className='col-md-6 col-12 text-muted company-name pb-1'>\r\n                            {product.company.fullname}\r\n                        </div>\r\n                        <div className='col-md-6 col-12'>\r\n                            {product.price} Rs.\r\n                            </div>\r\n                    </div>\r\n                    <div className='review-tags'>\r\n                        <p className='product-subcatogery review-tag'>{product.subCatogery[0]}</p>\r\n                    </div>\r\n                    <Button className='explore-review-button' onClick={() => this.routeChange(product._id)}>Explore All Reviews</Button>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nclass SubCatogeryProducts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.avgReview = this.avgReview.bind(this)\r\n    }\r\n    avgReview(reviews) {\r\n        var reviewSum = 0;\r\n        var totalReviews = 0;\r\n        for (var i = 0; i < reviews.length; i++) {\r\n            reviewSum = reviewSum + reviews[i].rating;\r\n            totalReviews = totalReviews + 1;\r\n        }\r\n        return (reviewSum / totalReviews);\r\n    }\r\n    render() {\r\n        if (this.props.products.isLoading) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.products.errMess) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <p>{this.props.products.errMess}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            const subCatogery = window.location.pathname.split('/')[3]\r\n            const productsList = this.props.products.products.filter(product => product.subCatogery.includes(subCatogery) === true)\r\n            const products = productsList.map((product) => {\r\n                var averageReview = 0\r\n                if (this.props.reviews.reviews.length > 0) {\r\n                    averageReview = this.props.reviews.reviews.filter(review => review.product === product._id)\r\n                    averageReview = this.avgReview(averageReview);\r\n                }\r\n                product.averageReview = averageReview.toFixed(1)\r\n                return (\r\n                    <Product product={product} history={this.props.history} noOfreviews={this.props.reviews.reviews.filter(review => review.product === product._id).length} />\r\n                )\r\n            })\r\n            return (\r\n                <div className='container-fluid'>\r\n                    <h1>Products</h1>\r\n                    {products.length === 0 ?\r\n                        <div className='row'>\r\n                            <div className='col-12 text-center'>\r\n                                <h2 className='no-product-msg'>No product for this sub catogery.</h2>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='row'>\r\n                            {products}\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default withRouter(SubCatogeryProducts);","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ContactUsComponent.js",["195","196","197","198","199","200","201","202","203","204","205","206"],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\AboutUsComponent.js",["207","208"],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\HeaderComponent.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\HomeComponent.js",["209","210"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            Object.keys(this.props.user.user).length !== 0 ?\r\n                <div className='container-fluid'>\r\n                    <div className='home-welcome-msg'>\r\n                        <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                        <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                        <span className='fa fa-star  d-sm-inline d-none'> </span> Welcome back {this.props.user.user.user.fullname} <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                        <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                        <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                    </div>\r\n                    <div className='row align-items-center'>\r\n                        <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                            <h4 className='home-card-heading-left m-0 p-2'>Your profile needs your attention</h4>\r\n                            <div className='home-card-body-left p-2'>\r\n                                <p className='home-card-text'>Builing solid profile makes better impression among others, Why dont you check your profile and make some amazing changes ! </p>\r\n                                <button className=' btn home-card-button' onClick={() => { this.props.history.push('/userprofile') }}>Go to profile <span className='fa fa-space-shuttle'></span></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                            <img src='/assets/images/illustrators/red_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                            <img src='/assets/images/illustrators/blue_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                            <h4 className='home-card-heading-right m-0'>Thinking to buy new Smartphone ?</h4>\r\n                            <div className='home-card-body-right '>\r\n                                <p className='home-card-text'>Beware of false advertisement, always check trusted users's reviews and save yourself from fruad.</p>\r\n                                <button className=' btn home-card-button' onClick={() => { this.props.history.push('/products/subcatogery/Mobiles') }}>check smartphone reviews <span className='fa fa-space-shuttle'></span></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                            <h4 className='home-card-heading-left m-0 p-2'>Wants to give suggestions ? </h4>\r\n                            <div className='home-card-body-left p-2'>\r\n                                <p className='home-card-text'>Your valuable feedback will help us to improve your experience, Just contact us on any of mentioned platform and contribute towards better journey</p>\r\n                                <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Give suggestions! <span className='fa fa-space-shuttle'></span></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                            <img src='/assets/images/illustrators/yellow_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                        </div>\r\n\r\n                        <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                            <img src='/assets/images/illustrators/violet_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                        </div>\r\n                        <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                            <h4 className='home-card-heading-right m-0'>What next, Hold on !</h4>\r\n                            <div className='home-card-body-right'>\r\n                                <p className='home-card-text'>We will soon release major update with features including Edit profile, Email support for account security, Enhanced review system, Search and filter for products and reviews and many more !!!</p>\r\n                                <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Contribute with us <span className='fa fa-space-shuttle'></span></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : Object.keys(this.props.company.company).length !== 0 ?\r\n                    <div className='container-fluid'>\r\n                        <div className='home-welcome-msg'>\r\n                            <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                            <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                            <span className='fa fa-star  d-sm-inline d-none'> </span> Welcome back {this.props.company.company.company.fullname} <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                            <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                            <span className='fa fa-star  d-sm-inline d-none'> </span>\r\n                        </div>\r\n                        <div className='row align-items-center'>\r\n                            <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-left m-0 p-2'>Your profile needs your attention</h4>\r\n                                <div className='home-card-body-left p-2'>\r\n                                    <p className='home-card-text'>Builing solid profile makes better impression among others, Why dont you check your profile and make some amazing changes ! </p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/notavaliable') }}>Go to profile <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/red_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/blue_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-right m-0'>Want to Look Reviews on your products ?</h4>\r\n                                <div className='home-card-body-right '>\r\n                                    <p className='home-card-text'>Getting reviews from trusted users will help you know your product success-rate well, reviews will help manage your next successful product launch.</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/products/myproducts') }}>Cheak your products<span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-left m-0 p-2'>Wants to give suggestions ? </h4>\r\n                                <div className='home-card-body-left p-2'>\r\n                                    <p className='home-card-text'>Your valuable feedback will help us to improve your experience, Just contact us on any of mentioned platform and contribute towards better journey</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Give suggestions! <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/yellow_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/violet_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-right m-0'>What next, Hold on !</h4>\r\n                                <div className='home-card-body-right'>\r\n                                    <p className='home-card-text'>We will soon release major update with features including Edit profile, Email support for account security, Enhanced review system, Search and filter for products and reviews and many more !!!</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Contribute with us <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className='container-fluid'>\r\n                        <div className='row align-items-center'>\r\n                            <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-left m-0 p-2'>Signup for amazing experience</h4>\r\n                                <div className='home-card-body-left p-2'>\r\n                                    <p className='home-card-text'>Are you here for the first time, then welcome to the wolrd of reviews. Check out trusted users's reviews before buying any product. Signup to share your own experience for any product.</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/signup') }}>Sign up<span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/red_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/blue_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-right m-0'>Thinking to buy new Smartphone ?</h4>\r\n                                <div className='home-card-body-right '>\r\n                                    <p className='home-card-text'>Beware of false advertisement, always check trusted users's reviews and save yourself from fruad.</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/products/subcatogery/Mobiles') }}>check smartphone reviews <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pl-0 home-card-left mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-left m-0 p-2'>Wants to give suggestions ? </h4>\r\n                                <div className='home-card-body-left p-2'>\r\n                                    <p className='home-card-text'>Your valuable feedback will help us to improve your experience, Just contact us on any of mentioned platform and contribute towards better journey</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Give suggestions! <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/yellow_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n\r\n                            <div className='col-md-6 col-12 text-center d-lg-block d-none'>\r\n                                <img src='/assets/images/illustrators/violet_review.jpg' alt=\"red review\" height=\"300px\" align=\"center\"></img>\r\n                            </div>\r\n                            <div className='col-md-6 col-12 pr-0 home-card-right mb-2 mt-2'>\r\n                                <h4 className='home-card-heading-right m-0'>What next, Hold on !</h4>\r\n                                <div className='home-card-body-right'>\r\n                                    <p className='home-card-text'>We will soon release major update with features including Edit profile, Email support for account security, Enhanced review system, Search and filter for products and reviews and many more !!!</p>\r\n                                    <button className=' btn home-card-button' onClick={() => { this.props.history.push('/contactus') }}>Contribute with us <span className='fa fa-space-shuttle'></span></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Home)","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ProductsComponent.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardText, Button, CardBody, BreadcrumbItem, Breadcrumb, Row, Label, FormGroup, Col, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport moment from 'moment';\r\nimport ReactQuill, { Quill } from 'react-quill'\r\nimport { ImageResize } from 'quill-image-resize-module';\r\nimport { ImageDrop } from 'quill-image-drop-module'\r\nimport Parser from 'html-react-parser'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Editor from './EditorComponent'\r\nimport ProductForm from './ProductFormComponent'\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst minLength = (len) => (value) => value && value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\n\r\n\r\n// class ProductForm extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             isModalOpen: false,\r\n//             productName: this.props.product ? this.props.product.productName : '',\r\n//             price: this.props.product ? this.props.product.price : 0,\r\n//             catogeryList: [],\r\n//             inputCatogeryList: this.props.product ? this.props.product.catogery : [],\r\n//             subcatogeryList: [],\r\n//             inputSubCatogeryList: this.props.product ? this.props.product.subCatogery : [],\r\n//             featured: this.props.product ? this.props.product.featured : false,\r\n//             description: this.props.product ? this.props.product.description : \"\"\r\n//         }\r\n//         this.toggleModal = this.toggleModal.bind(this)\r\n//         this.handleSubmit = this.handleSubmit.bind(this)\r\n//         this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\r\n//         this.handlePriceChange = this.handlePriceChange.bind(this)\r\n//         this.handleProductNameChange = this.handleProductNameChange.bind(this)\r\n//         this.handleCatogeryChange = this.handleCatogeryChange.bind(this)\r\n//         this.handleCatogerySelect = this.handleCatogerySelect.bind(this)\r\n//         this.handleSubCatogeryChange = this.handleSubCatogeryChange.bind(this)\r\n//         this.handleSubCatogerySelect = this.handleSubCatogerySelect.bind(this)\r\n//         this.handleFeatureChange = this.handleFeatureChange.bind(this)\r\n//     }\r\n//     handleSubmit(value) {\r\n//         this.toggleModal()\r\n//         console.log(this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n//         console.log(this.state.description)\r\n//         this.props.product\r\n//             ?\r\n//             this.props.editProduct(this.props.product._id, this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n//             :\r\n//             this.props.postProduct(this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n//     }\r\n//     toggleModal() {\r\n//         this.setState({\r\n//             isModalOpen: !(this.state.isModalOpen)\r\n//         })\r\n//     }\r\n//     handleCatogeryChange(value) {\r\n//         const catogeries = ['Electronics', 'Home-Appliances', 'Grocery', 'Books', 'Entertainment', 'Other']\r\n//         if (value === '') {\r\n//             this.setState({\r\n//                 catogeryList: []\r\n//             })\r\n//         }\r\n//         else {\r\n//             const matches = catogeries.filter(catogery => catogery.toLowerCase().includes(value.toLowerCase()))\r\n//             this.setState({\r\n//                 catogeryList: matches\r\n//             })\r\n//         }\r\n\r\n//     }\r\n//     handleCatogerySelect(value) {\r\n//         let catogerylist = new Set(this.state.inputCatogeryList)\r\n//         catogerylist.add(value)\r\n//         this.setState({\r\n//             inputCatogeryList: Array.from(catogerylist)\r\n//         })\r\n//     }\r\n//     handleProductNameChange(value) {\r\n//         this.setState({\r\n//             productName: value\r\n//         })\r\n//     }\r\n//     handlePriceChange(value) {\r\n//         this.setState({\r\n//             price: value\r\n//         })\r\n//     }\r\n//     handleSubCatogeryChange(value) {\r\n//         const subcatogeries = ['Electronics', 'Home-Appliances', 'Grocery', 'Books', 'Entertainment', 'Other']\r\n//         if (value === '') {\r\n//             this.setState({\r\n//                 subcatogeryList: []\r\n//             })\r\n//         }\r\n//         else {\r\n//             const matches = subcatogeries.filter(subcatogery => subcatogery.toLowerCase().includes(value.toLowerCase()))\r\n//             this.setState({\r\n//                 subcatogeryList: matches\r\n//             })\r\n//         }\r\n\r\n//     }\r\n//     handleSubCatogerySelect(value) {\r\n//         let subcatogerylist = new Set(this.state.inputSubCatogeryList)\r\n//         subcatogerylist.add(value)\r\n//         this.setState({\r\n//             inputSubCatogeryList: Array.from(subcatogerylist)\r\n//         })\r\n//     }\r\n//     handleDescriptionChange(value) {\r\n//         this.setState({\r\n//             description: value\r\n//         })\r\n//         console.log(value)\r\n//         console.log('changed')\r\n//     }\r\n//     handleFeatureChange(value) {\r\n//         this.setState({\r\n//             featured: !(this.state.featured)\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         const modules = {\r\n//             toolbar: [\r\n//                 [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n//                 [{ size: [] }],\r\n//                 ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n//                 [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n//                 { 'indent': '-1' }, { 'indent': '+1' }],\r\n//                 ['link', 'image', 'video'],\r\n//                 ['clean']\r\n//             ],\r\n//             imageResize: {\r\n//                 displaySize: true,\r\n//                 resize: true\r\n//             },\r\n//             clipboard: {\r\n//                 // toggle to add extra line breaks when pasting HTML:\r\n//                 matchVisual: false,\r\n//             }\r\n//         }\r\n//         const formats = [\r\n//             'header', 'font', 'size',\r\n//             'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n//             'list', 'bullet', 'indent',\r\n//             'link', 'image', 'video'\r\n//         ]\r\n//         const catogerylist = this.state.catogeryList.map(tag => {\r\n//             return (\r\n//                 <span className='review-tag clickable col-auto' onClick={(e) => this.handleCatogerySelect(e.target.innerText)}>{tag}</span>\r\n//             )\r\n//         })\r\n//         const selectedCatogeryList = this.state.inputCatogeryList.map(catogery => {\r\n//             return (\r\n//                 <span className='mt-2'>\r\n//                     <span className='selected-tag col-auto'>{catogery}</span><span className='cancle-tag clickable'> X </span>\r\n//                 </span>\r\n//             )\r\n//         })\r\n//         const subcatogerylist = this.state.subcatogeryList.map(tag => {\r\n//             return (\r\n//                 <span className='review-tag clickable col-auto' onClick={(e) => this.handleSubCatogerySelect(e.target.innerText)}>{tag}</span>\r\n//             )\r\n//         })\r\n//         const selectedSubCatogeryList = this.state.inputSubCatogeryList.map(subcatogery => {\r\n//             return (\r\n//                 <span className='mt-2'>\r\n//                     <span className='selected-tag col-auto'>{subcatogery}</span><span className='cancle-tag clickable'> X </span>\r\n//                 </span>\r\n//             )\r\n//         })\r\n//         return (\r\n//             <div>\r\n//                 <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n//                     <ModalHeader toggle={this.toggleModal}>\r\n//                         {this.props.product ? <h4>Edit your product here</h4> : <h4>Post your Product Here</h4>}\r\n//                     </ModalHeader>\r\n//                     <ModalBody>\r\n//                         <LocalForm onSubmit={this.handleSubmit} row>\r\n//                             <Row className='form-group'>\r\n//                                 <Label md={12} htmlFor='.productname'>Product name</Label>\r\n//                                 <Col md={12}>\r\n//                                     <Control.text model='.productname'\r\n//                                         id='productname'\r\n//                                         className='form-control'\r\n//                                         placeholder='Iphone 12 pro max Gray'\r\n\r\n//                                         onChange={(e) => { this.handleProductNameChange(e.target.value) }}\r\n//                                         validators={{ required, minLength: minLength(3), maxLength: maxLength(50) }}\r\n//                                     />\r\n//                                     <Errors\r\n//                                         className='form-error'\r\n//                                         model='.productname'\r\n//                                         show='touched'\r\n//                                         messages={{\r\n//                                             required: 'Required',\r\n//                                             minLength: 'Must be at least 3 character long ',\r\n//                                             maxLength: 'Must be at most 50 character long '\r\n//                                         }}\r\n//                                     />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row className='form-group'>\r\n//                                 <Label md={12} htmlFor='.price'>Price</Label>\r\n//                                 <Col md={12}>\r\n//                                     <Control.text model='.price'\r\n//                                         id='price'\r\n//                                         className='form-control'\r\n//                                         placeholder='799'\r\n//                                         onChange={(e) => { this.handlePriceChange(e.target.value) }}\r\n//                                         validators={{ required, minLength: minLength(1), maxLength: maxLength(50) }}\r\n//                                     />\r\n//                                     <Errors\r\n//                                         className='form-error'\r\n//                                         model='.price'\r\n//                                         show='touched'\r\n//                                         messages={{\r\n//                                             required: 'Required',\r\n//                                             minLength: 'Must be at least 1 character long ',\r\n//                                             maxLength: 'Must be at most 50 character long '\r\n//                                         }}\r\n//                                     />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row>\r\n//                                 {catogerylist.length !== 0 &&\r\n//                                     <div className='col-12'>\r\n//                                         <h6>Suggested Catogeries</h6>\r\n//                                         <div className='row review-tags'>\r\n//                                             {catogerylist}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 }\r\n//                             </Row>\r\n//                             <Row>\r\n//                                 {this.state.inputCatogeryList.length !== 0 &&\r\n//                                     <div className='col-12'>\r\n//                                         <h6>Selected Catogery</h6>\r\n//                                         <div className='row selected-tags'>\r\n//                                             {selectedCatogeryList}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 }\r\n//                             </Row>\r\n//                             <Row className='form-group'>\r\n//                                 <Label md={12} htmlFor='.catogeries'>Catogery</Label>\r\n//                                 <Col md={12}>\r\n//                                     <Control.textarea model='.catogeries'\r\n//                                         id='catogeries'\r\n//                                         className='form-control'\r\n//                                         placeholder='Search relevant catogeries here'\r\n//                                         rows='1'\r\n//                                         onChange={(e) => { this.handleCatogeryChange(e.target.value) }} />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row>\r\n//                                 {subcatogerylist.length !== 0 &&\r\n//                                     <div className='col-12'>\r\n//                                         <h6>Suggested Sub-Catogeries</h6>\r\n//                                         <div className='row review-tags'>\r\n//                                             {subcatogerylist}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 }\r\n//                             </Row>\r\n//                             <Row>\r\n//                                 {this.state.inputSubCatogeryList.length !== 0 &&\r\n//                                     <div className='col-12'>\r\n//                                         <h6>Selected Sub-Catogery</h6>\r\n//                                         <div className='row selected-tags'>\r\n//                                             {selectedSubCatogeryList}\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 }\r\n//                             </Row>\r\n//                             <Row className='form-group'>\r\n//                                 <Label md={12} htmlFor='.subcatogeries'>Sub-Catogery</Label>\r\n//                                 <Col md={12}>\r\n//                                     <Control.textarea model='.subcatogeries'\r\n//                                         id='subcatogeries'\r\n//                                         className='form-control'\r\n//                                         placeholder='Search relevant Sub-catogeries here'\r\n//                                         rows='1'\r\n//                                         onChange={(e) => { this.handleSubCatogeryChange(e.target.value) }} />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row className='form-group'>\r\n//                                 <Label md={12} htmlFor='.description'>Description</Label>\r\n//                                 <Col md={12}>\r\n//                                     <ReactQuill\r\n//                                         theme='snow'\r\n//                                         onChange={this.handleDescriptionChange}\r\n//                                         modules={modules}\r\n//                                         formats={formats}\r\n//                                     />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row className='form-group'>\r\n//                                 <Col md={12} className='feature-form'>\r\n//                                     <div className='row'>\r\n//                                         <div className='col-6 col-md-5 pr-0 ml-auto mr-auto'>\r\n//                                             <span className='feature-question m-auto'>Wants to feature ? </span>\r\n//                                         </div>\r\n//                                         <div className='col-6 pl-0 ml-auto mr-auto'>\r\n//                                             <Label className=\"switch\">\r\n//                                                 <input type=\"checkbox\" onChange={this.handleFeatureChange} />\r\n//                                                 <span className=\"slider round\"></span>\r\n//                                             </Label>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{ size: 12 }} className='text-center'>\r\n//                                     <Button type='submit' color=\"primary\">Submit</Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n\r\n//                         </LocalForm>\r\n//                     </ModalBody>\r\n//                 </Modal>\r\n//                 {this.props.product ? <span className='fa fa-edit fa-lg edit-product' data-tip='Edit product Details' data-for='editproduct' onClick={this.toggleModal}></span> : <Button className='btn submit-review' onClick={this.toggleModal} ><span className='fa fa-plus '></span> Add product</Button>}\r\n//                 <ReactTooltip id=\"editproduct\" type=\"warning\" effect='float'>\r\n//                 </ReactTooltip>\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.routeChange = this.routeChange.bind(this)\r\n    }\r\n    routeChange(productId) {\r\n        let path = '/reviews?product=' + productId;\r\n        this.props.history.push(path);\r\n    }\r\n    render() {\r\n        const product = this.props.product\r\n        const productPic = product.pic || \"https://res.cloudinary.com/sohil/image/upload/v1599586001/zwjupmysyf20v3yfpfus.jpg\"\r\n        return (\r\n            <Card className='col-lg-3 col-md-4 col-sm-6 col-12 m-md-0 pl-0 pr-0 m-auto'>\r\n                <div className='image'>\r\n                    {Object.keys(this.props.company.company).length !== 0 && this.props.company.company.company._id === product.company._id &&\r\n                        <span onClick={() => { this.props.history.push('/editproduct/' + product._id) }} className='edit-product fa fa-pencil'></span>\r\n                    }\r\n                    <img className=\"img img-responsive thumb product-image\" src={productPic} alt=\"Card image \" />\r\n                </div>\r\n                <CardBody >\r\n                    <h2 className='product-card-title' data-tip={product.productName} data-for=\"producttitle\">{product.productName}\r\n                    </h2>\r\n                    <ReactTooltip effect=\"float\" id=\"producttitle\" type=\"warning\" />\r\n                    <span>\r\n                        {\r\n                            isNaN(product.averageReview)\r\n                                ? <span className='product-review'></span>\r\n                                : <span className='product-review review-rating'>{product.averageReview}<span className='fa fa-star small-star'></span></span>\r\n                        }\r\n                        <span className='no-of-reviews'> {this.props.noOfreviews} {this.props.noOfreviews > 1 ? <span className='no-of-reviews'> Reviews</span> : <span>Review</span>} </span>\r\n                    </span>\r\n                    <div className='row' >\r\n                        <div className='col-md-6 col-12 text-muted company-name pb-1'>\r\n                            {product.company.fullname}\r\n                        </div>\r\n                        <div className='col-md-6 col-12'>\r\n                            {product.price} Rs.\r\n                            </div>\r\n                    </div>\r\n                    <div className='review-tags'>\r\n                        <p className='product-subcatogery review-tag'>{product.subCatogery[0]}</p>\r\n                    </div>\r\n                    <Button className='explore-review-button' onClick={() => this.routeChange(product._id)}>Explore All Reviews</Button>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.avgReview = this.avgReview.bind(this)\r\n    }\r\n    avgReview(reviews) {\r\n        var reviewSum = 0;\r\n        var totalReviews = 0;\r\n        for (var i = 0; i < reviews.length; i++) {\r\n            reviewSum = reviewSum + reviews[i].rating;\r\n            totalReviews = totalReviews + 1;\r\n        }\r\n        return (reviewSum / totalReviews);\r\n    }\r\n    render() {\r\n        if (this.props.products.isLoading) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.products.errMess) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <p>{this.props.products.errMess}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            console.log('Hi i am in product component')\r\n            const products = this.props.products.products.map((product) => {\r\n                var averageReview = 0\r\n                if (this.props.reviews.reviews.length > 0) {\r\n                    averageReview = this.props.reviews.reviews.filter(review => review.product === product._id)\r\n                    averageReview = this.avgReview(averageReview);\r\n                }\r\n                product.averageReview = averageReview.toFixed(1)\r\n                return (\r\n                    <Product product={product} history={this.props.history} company={this.props.company} editProduct={this.props.editProduct} noOfreviews={this.props.reviews.reviews.filter(review => review.product === product._id).length} />\r\n                )\r\n            })\r\n            return (\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <div className='col-12 p-0 mt-1'>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Products</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n\r\n                        <div className='col-12 p-0'>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <h1 className='product-heading'>Products</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        {products}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default withRouter(Products);","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\MyProductsComponent.js",["235","236","237","238","239","240","241","242","243","244","245"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardText, Button, CardBody, BreadcrumbItem, Breadcrumb, Row, Label, FormGroup, Col, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport moment from 'moment';\r\nimport ReactQuill from 'react-quill'\r\nimport Parser from 'html-react-parser'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\nconst minLength = (len) => (value) => value && value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\n\r\n\r\nclass ProductForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false,\r\n            productName: this.props.product ? this.props.product.productName : '',\r\n            price: this.props.product ? this.props.product.price : 0,\r\n            catogeryList: [],\r\n            inputCatogeryList: this.props.product ? this.props.product.catogery : [],\r\n            subcatogeryList: [],\r\n            inputSubCatogeryList: this.props.product ? this.props.product.subCatogery : [],\r\n            featured: this.props.product ? this.props.product.featured : false,\r\n            description: this.props.product ? this.props.product.description : \"\"\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\r\n        this.handlePriceChange = this.handlePriceChange.bind(this)\r\n        this.handleProductNameChange = this.handleProductNameChange.bind(this)\r\n        this.handleCatogeryChange = this.handleCatogeryChange.bind(this)\r\n        this.handleCatogerySelect = this.handleCatogerySelect.bind(this)\r\n        this.handleSubCatogeryChange = this.handleSubCatogeryChange.bind(this)\r\n        this.handleSubCatogerySelect = this.handleSubCatogerySelect.bind(this)\r\n        this.handleFeatureChange = this.handleFeatureChange.bind(this)\r\n    }\r\n    handleSubmit(value) {\r\n        this.toggleModal()\r\n        this.props.product\r\n            ?\r\n            this.props.editProduct(this.props.product._id, this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n            :\r\n            this.props.postProduct(this.state.productname, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !(this.state.isModalOpen)\r\n        })\r\n    }\r\n    handleCatogeryChange(value) {\r\n        const catogeries = ['Electronics', 'Home-Appliances', 'Grocery', 'Books', 'Entertainment', 'Other']\r\n        if (value === '') {\r\n            this.setState({\r\n                catogeryList: []\r\n            })\r\n        }\r\n        else {\r\n            const matches = catogeries.filter(catogery => catogery.toLowerCase().includes(value.toLowerCase()))\r\n            this.setState({\r\n                catogeryList: matches\r\n            })\r\n        }\r\n\r\n    }\r\n    handleCatogerySelect(value) {\r\n        let catogerylist = new Set(this.state.inputCatogeryList)\r\n        catogerylist.add(value)\r\n        this.setState({\r\n            inputCatogeryList: Array.from(catogerylist)\r\n        })\r\n    }\r\n    handleProductNameChange(value) {\r\n        this.setState({\r\n            productName: value\r\n        })\r\n    }\r\n    handlePriceChange(value) {\r\n        this.setState({\r\n            price: value\r\n        })\r\n    }\r\n    handleSubCatogeryChange(value) {\r\n        const subcatogeries = ['Electronics', 'Home-Appliances', 'Grocery', 'Books', 'Entertainment', 'Other']\r\n        if (value === '') {\r\n            this.setState({\r\n                subcatogeryList: []\r\n            })\r\n        }\r\n        else {\r\n            const matches = subcatogeries.filter(subcatogery => subcatogery.toLowerCase().includes(value.toLowerCase()))\r\n            this.setState({\r\n                subcatogeryList: matches\r\n            })\r\n        }\r\n\r\n    }\r\n    handleSubCatogerySelect(value) {\r\n        let subcatogerylist = new Set(this.state.inputSubCatogeryList)\r\n        subcatogerylist.add(value)\r\n        this.setState({\r\n            inputSubCatogeryList: Array.from(subcatogerylist)\r\n        })\r\n    }\r\n    handleDescriptionChange(value) {\r\n        this.setState({\r\n            description: value\r\n        })\r\n    }\r\n    handleFeatureChange(value) {\r\n        this.setState({\r\n            featured: !(this.state.featured)\r\n        })\r\n    }\r\n    render() {\r\n        const catogerylist = this.state.catogeryList.map(tag => {\r\n            return (\r\n                <span className='review-tag clickable col-auto' onClick={(e) => this.handleCatogerySelect(e.target.innerText)}>{tag}</span>\r\n            )\r\n        })\r\n        const selectedCatogeryList = this.state.inputCatogeryList.map(catogery => {\r\n            return (\r\n                <span className='mt-2'>\r\n                    <span className='selected-tag col-auto'>{catogery}</span><span className='cancle-tag clickable'> X </span>\r\n                </span>\r\n            )\r\n        })\r\n        const subcatogerylist = this.state.subcatogeryList.map(tag => {\r\n            return (\r\n                <span className='review-tag clickable col-auto' onClick={(e) => this.handleSubCatogerySelect(e.target.innerText)}>{tag}</span>\r\n            )\r\n        })\r\n        const selectedSubCatogeryList = this.state.inputSubCatogeryList.map(subcatogery => {\r\n            return (\r\n                <span className='mt-2'>\r\n                    <span className='selected-tag col-auto'>{subcatogery}</span><span className='cancle-tag clickable'> X </span>\r\n                </span>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        {this.props.product ? <h4>Edit your product here</h4> : <h4>Post your Product Here</h4>}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleSubmit} row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='.productname'>Product name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model='.productname'\r\n                                        id='productname'\r\n                                        className='form-control'\r\n                                        placeholder='Iphone 12 pro max Gray'\r\n                                        value={this.state.productName}\r\n                                        onChange={(e) => { this.handleProductNameChange(e.target.value) }}\r\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(50) }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='form-error'\r\n                                        model='.productname'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 3 character long ',\r\n                                            maxLength: 'Must be at most 50 character long '\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='.price'>Price</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model='.price'\r\n                                        id='price'\r\n                                        className='form-control'\r\n                                        placeholder='799'\r\n                                        value={this.state.price}\r\n                                        onChange={(e) => { this.handlePriceChange(e.target.value) }}\r\n                                        validators={{ required, minLength: minLength(1), maxLength: maxLength(50) }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='form-error'\r\n                                        model='.price'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 1 character long ',\r\n                                            maxLength: 'Must be at most 50 character long '\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {catogerylist.length !== 0 &&\r\n                                    <div className='col-12'>\r\n                                        <h6>Suggested Catogeries</h6>\r\n                                        <div className='row review-tags'>\r\n                                            {catogerylist}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                {this.state.inputCatogeryList.length !== 0 &&\r\n                                    <div className='col-12'>\r\n                                        <h6>Selected Catogery</h6>\r\n                                        <div className='row selected-tags'>\r\n                                            {selectedCatogeryList}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='.catogeries'>Catogery</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model='.catogeries'\r\n                                        id='catogeries'\r\n                                        className='form-control'\r\n                                        placeholder='Search relevant catogeries here'\r\n                                        rows='1'\r\n                                        value={this.state.inputCatogeryList}\r\n                                        onChange={(e) => { this.handleCatogeryChange(e.target.value) }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {subcatogerylist.length !== 0 &&\r\n                                    <div className='col-12'>\r\n                                        <h6>Suggested Sub-Catogeries</h6>\r\n                                        <div className='row review-tags'>\r\n                                            {subcatogerylist}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                {this.state.inputSubCatogeryList.length !== 0 &&\r\n                                    <div className='col-12'>\r\n                                        <h6>Selected Sub-Catogery</h6>\r\n                                        <div className='row selected-tags'>\r\n                                            {selectedSubCatogeryList}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='.subcatogeries'>Sub-Catogery</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model='.subcatogeries'\r\n                                        id='subcatogeries'\r\n                                        className='form-control'\r\n                                        placeholder='Search relevant Sub-catogeries here'\r\n                                        rows='1'\r\n                                        value={this.state.inputSubCatogeryList}\r\n                                        onChange={(e) => { this.handleSubCatogeryChange(e.target.value) }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='.description'>Description</Label>\r\n                                <Col md={12}>\r\n                                    <ReactQuill theme=\"snow\" value={this.state.description} onChange={this.handleDescriptionChange} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={12} className='feature-form'>\r\n                                    <div className='row'>\r\n                                        <div className='col-6 col-md-5 pr-0 ml-auto mr-auto'>\r\n                                            <span className='feature-question m-auto'>Wants to feature ? </span>\r\n                                        </div>\r\n                                        <div className='col-6 pl-0 ml-auto mr-auto'>\r\n                                            <Label className=\"switch\">\r\n                                                <input type=\"checkbox\" value={this.state.featured} onChange={this.handleFeatureChange} />\r\n                                                <span className=\"slider round\"></span>\r\n                                            </Label>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 12 }} className='text-center'>\r\n                                    <Button type='submit' color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                {this.props.product ? <span className='fa fa-edit fa-lg edit-product' data-tip='Edit product Details' data-for='editproduct' onClick={this.toggleModal}></span> : <Button className='btn submit-review' onClick={this.toggleModal} ><span className='fa fa-plus '></span> Add product</Button>}\r\n                <ReactTooltip id=\"editproduct\" type=\"warning\" effect='float'>\r\n                </ReactTooltip>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.routeChange = this.routeChange.bind(this)\r\n    }\r\n    routeChange(productId) {\r\n        let path = '/reviews?product=' + productId;\r\n        this.props.history.push(path);\r\n    }\r\n    render() {\r\n        const product = this.props.product\r\n        const productPic = product.pic || \"https://res.cloudinary.com/sohil/image/upload/v1599586001/zwjupmysyf20v3yfpfus.jpg\"\r\n        return (\r\n            <Card className='col-lg-3 col-md-4 col-sm-6 col-12 m-md-0 pl-0 pr-0 m-auto'>\r\n                <div className='image'>\r\n                    {Object.keys(this.props.company.company).length !== 0 && this.props.company.company.company._id === product.company._id &&\r\n                        <ProductForm product={product} editProduct={this.props.editProduct} />\r\n                    }\r\n                    <img className=\"img img-responsive thumb product-image\" src={productPic} alt=\"Card image \" />\r\n                </div>\r\n                <CardBody >\r\n                    <h2 className='product-card-title' data-tip={product.productName} data-for=\"producttitle\">{product.productName}\r\n                    </h2>\r\n                    <ReactTooltip id=\"producttitle\" type=\"warning\" effect='float'>\r\n                    </ReactTooltip>\r\n                    <span>\r\n                        {\r\n                            isNaN(product.averageReview)\r\n                                ? <span className='product-review'></span>\r\n                                : <span className='product-review review-rating'>{product.averageReview}<span className='fa fa-star small-star'></span></span>\r\n                        }\r\n                        <span className='no-of-reviews'> {this.props.noOfreviews} {this.props.noOfreviews > 1 ? <span className='no-of-reviews'> Reviews</span> : <span>Review</span>} </span>\r\n                    </span>\r\n                    <div className='row' >\r\n                        <div className='col-md-6 col-12 text-muted pb-1'>\r\n                            {product.company.fullname}\r\n                        </div>\r\n                        <div className='col-md-6 col-12'>\r\n                            {product.price} Rs.\r\n                            </div>\r\n                    </div>\r\n                    <div className='review-tags'>\r\n                        <p className='product-subcatogery review-tag'>{product.subCatogery[0]}</p>\r\n                    </div>\r\n                    <Button className='explore-review-button' onClick={() => this.routeChange(product._id)}>Explore All Reviews</Button>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nclass MyProducts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.avgReview = this.avgReview.bind(this)\r\n    }\r\n    avgReview(reviews) {\r\n        var reviewSum = 0;\r\n        var totalReviews = 0;\r\n        for (var i = 0; i < reviews.length; i++) {\r\n            reviewSum = reviewSum + reviews[i].rating;\r\n            totalReviews = totalReviews + 1;\r\n        }\r\n        return (reviewSum / totalReviews);\r\n    }\r\n    render() {\r\n        if (this.props.products.isLoading) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.products.errMess) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <p>{this.props.products.errMess}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            console.log('Hi i am in product component')\r\n            var products = this.props.products.products.filter(product => Object.keys(this.props.company.company).length !== 0 && product.company._id === this.props.company.company.company._id)\r\n            products = products.map((product) => {\r\n                var averageReview = 0\r\n                if (this.props.reviews.reviews.length > 0) {\r\n                    averageReview = this.props.reviews.reviews.filter(review => review.product === product._id)\r\n                    averageReview = this.avgReview(averageReview);\r\n                }\r\n                product.averageReview = averageReview.toFixed(1)\r\n                return (\r\n                    <Product product={product} history={this.props.history} company={this.props.company} editProduct={this.props.editProduct} noOfreviews={this.props.reviews.reviews.filter(review => review.product === product._id).length} />\r\n                )\r\n            })\r\n            return (\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <div className='col-12 p-0 mt-1'>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>My Products</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n\r\n                        <div className='col-12 p-0'>\r\n                            <h1>My Products</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        {products}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default withRouter(MyProducts);","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ProductFormComponent.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardText, Button, CardBody, BreadcrumbItem, Breadcrumb, Row, Label, FormGroup, Col, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport moment from 'moment';\r\nimport ReactQuill, { Quill } from 'react-quill'\r\nimport { ImageResize } from 'quill-image-resize-module';\r\nimport { ImageDrop } from 'quill-image-drop-module'\r\nimport Parser from 'html-react-parser'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Editor from './EditorComponent'\r\nQuill.register('modules/imageResize', ImageResize);\r\n//  https://api.cloudinary.com/v1_1/sohil/image/upload\r\nconst minLength = (len) => (value) => value && value.length >= len\r\nconst maxLength = (len) => (value) => !value || value.length <= len\r\nconst required = (value) => value && value.length\r\n\r\n\r\n\r\nclass ProductForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false,\r\n            productName: this.props.product ? this.props.product.productName : '',\r\n            price: this.props.product ? this.props.product.price : 0,\r\n            catogeryList: [],\r\n            inputCatogeryList: this.props.product ? this.props.product.catogery : [],\r\n            subcatogeryList: [],\r\n            inputSubCatogeryList: this.props.product ? this.props.product.subCatogery : [],\r\n            featured: this.props.product ? this.props.product.featured : false,\r\n            description: this.props.product ? this.props.product.description : \"\",\r\n            pic: this.props.product ? this.props.product.pic : \"\"\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\r\n        this.handlePriceChange = this.handlePriceChange.bind(this)\r\n        this.handleProductNameChange = this.handleProductNameChange.bind(this)\r\n        this.handleCatogeryChange = this.handleCatogeryChange.bind(this)\r\n        this.handleCatogerySelect = this.handleCatogerySelect.bind(this)\r\n        this.handleSubCatogeryChange = this.handleSubCatogeryChange.bind(this)\r\n        this.handleSubCatogerySelect = this.handleSubCatogerySelect.bind(this)\r\n        this.handleFeatureChange = this.handleFeatureChange.bind(this)\r\n        this.handlePicChange = this.handlePicChange.bind(this)\r\n        this.handleCatogeryCancle = this.handleCatogeryCancle.bind(this)\r\n        this.handleSubCatogeryCancle = this.handleSubCatogeryCancle.bind(this)\r\n    }\r\n    handleSubmit(value) {\r\n        this.props.history.push('/products')\r\n        console.log(this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured)\r\n        console.log(this.state.description)\r\n        this.props.product\r\n            ?\r\n            this.props.editProduct(this.props.product._id, this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured, this.state.pic)\r\n            :\r\n            this.props.postProduct(this.state.productName, this.state.price, this.state.inputCatogeryList, this.state.inputSubCatogeryList, this.state.description, this.state.featured, this.state.pic)\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !(this.state.isModalOpen)\r\n        })\r\n    }\r\n    handleCatogeryChange(value) {\r\n        const catogeries = ['Electronics', 'Appliances', 'Grocery', 'Fashion', 'Restaurants', 'Movies', 'Books', 'Other']\r\n        if (value === '') {\r\n            this.setState({\r\n                catogeryList: []\r\n            })\r\n        }\r\n        else {\r\n            const matches = catogeries.filter(catogery => catogery.toLowerCase().includes(value.toLowerCase()))\r\n            this.setState({\r\n                catogeryList: matches\r\n            })\r\n        }\r\n\r\n    }\r\n    handleCatogerySelect(value) {\r\n        let catogerylist = new Set(this.state.inputCatogeryList)\r\n        catogerylist.add(value)\r\n        this.setState({\r\n            inputCatogeryList: Array.from(catogerylist)\r\n        })\r\n    }\r\n    handleCatogeryCancle(value) {\r\n        this.setState({\r\n            inputCatogeryList: this.state.inputCatogeryList.filter(catogery => catogery !== value)\r\n        })\r\n    }\r\n    handleSubCatogeryCancle(value) {\r\n        this.setState({\r\n            inputSubCatogeryList: this.state.inputSubCatogeryList.filter(subcatogery => subcatogery !== value)\r\n        })\r\n    }\r\n    handleProductNameChange(value) {\r\n        this.setState({\r\n            productName: value\r\n        })\r\n    }\r\n    handlePriceChange(value) {\r\n        this.setState({\r\n            price: value\r\n        })\r\n    }\r\n    handleSubCatogeryChange(value) {\r\n        const subcatogeries = [\r\n            'Mobiles', 'Computer-Pheripherals', 'Mobile Accessory', 'Powerbank', 'Audio', 'Gaming', 'Storage', 'Laptop Accessories', 'Camera', 'Tablets', 'Smart Wearables', 'Smart Home Automation', 'Laptop and Desktop',\r\n            'Televisions', 'Washing Machines', 'Air Conditioners', 'Refrigerators', 'Home Applicances',\r\n            'Dairy', 'Spices', 'Beverages', 'Soft Drinks', 'Baking', 'Oils', 'Snacks', 'Frozen Foods', 'Breads',\r\n            'Men', 'Women', 'Kids', 'Jeans', 'Jacket', 'T-shirt', 'Shirt', 'Hoodie', 'Gym clothes', 'Sunglasses', 'shoes', 'Purse', 'Belt',\r\n            'Ethnic', 'Fast Food', 'Snacks Bar', 'Casual dining', 'Family style', 'Fine dining',\r\n            'Actions', 'Comedies', 'Romantic', 'Adventure', 'Musicals', 'Drama', 'Sci-Fi', 'Horror', 'War', 'Biopic', 'Animation', 'Fantasy', 'Thriller',\r\n            'Comic', 'Study'\r\n        ]\r\n        if (value === '') {\r\n            this.setState({\r\n                subcatogeryList: []\r\n            })\r\n        }\r\n        else {\r\n            const matches = subcatogeries.filter(subcatogery => subcatogery.toLowerCase().includes(value.toLowerCase()))\r\n            this.setState({\r\n                subcatogeryList: matches\r\n            })\r\n        }\r\n    }\r\n    handleSubCatogerySelect(value) {\r\n        let subcatogerylist = new Set(this.state.inputSubCatogeryList)\r\n        subcatogerylist.add(value)\r\n        this.setState({\r\n            inputSubCatogeryList: Array.from(subcatogerylist)\r\n        })\r\n    }\r\n    handleDescriptionChange(value) {\r\n        this.setState({\r\n            description: value\r\n        })\r\n        console.log(value)\r\n        console.log('changed')\r\n    }\r\n    handleFeatureChange(value) {\r\n        this.setState({\r\n            featured: !(this.state.featured)\r\n        })\r\n    }\r\n    handlePicChange(value) {\r\n        this.setState({\r\n            pic: value\r\n        })\r\n        console.log('handle change worked, image loaded')\r\n    }\r\n    render() {\r\n        console.log(this.props.product)\r\n        console.log('from edit ?')\r\n        const modules = {\r\n            toolbar: [\r\n                [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n                [{ size: [] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n                { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image', 'video'],\r\n                ['clean']\r\n            ],\r\n            imageResize: {\r\n                displaySize: true,\r\n                resize: true\r\n            },\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        }\r\n        const formats = [\r\n            'header', 'font', 'size',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image', 'video'\r\n        ]\r\n        const catogerylist = this.state.catogeryList.map(tag => {\r\n            return (\r\n                <span className='review-tag clickable col-auto' onClick={(e) => this.handleCatogerySelect(e.target.innerText)}>{tag}</span>\r\n            )\r\n        })\r\n        const selectedCatogeryList = this.state.inputCatogeryList.map(catogery => {\r\n            return (\r\n                <span className='mt-2'>\r\n                    <span className='selected-tag col-auto'>{catogery}</span><span className='cancle-tag clickable' onClick={(e) => this.handleCatogeryCancle(catogery)}> X </span>\r\n                </span>\r\n            )\r\n        })\r\n        const subcatogerylist = this.state.subcatogeryList.map(tag => {\r\n            return (\r\n                <span className='review-tag clickable col-auto' onClick={(e) => this.handleSubCatogerySelect(e.target.innerText)}>{tag}</span>\r\n            )\r\n        })\r\n        const selectedSubCatogeryList = this.state.inputSubCatogeryList.map(subcatogery => {\r\n            return (\r\n                <span className='mt-2'>\r\n                    <span className='selected-tag col-auto'>{subcatogery}</span><span className='cancle-tag clickable' onClick={(e) => this.handleSubCatogeryCancle(subcatogery)} > X </span>\r\n                </span>\r\n            )\r\n        })\r\n        return (\r\n            <LocalForm onSubmit={this.handleSubmit} row className='product-form p-0 ml-md-4 mr-md-4 ml-1 mr-1'>\r\n                <div className='container-fluid'>\r\n                    <Row >\r\n                        <Col md={12} align='center' className='product-form-head'>\r\n                            {this.props.product ? <h1 className='product-form-heading'>Edit Your product here</h1> : <h1 className='product-form-heading'>Add your product here</h1>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='form-group'>\r\n                        <Col md={6}>\r\n                            <Label md={12} className='pl-0 pr-0' htmlFor='.productname'>Product name</Label>\r\n                            <Col md={12} className='pl-0 pr-0'>\r\n                                <Control.text model='.productname'\r\n                                    id='productname'\r\n                                    className='form-control'\r\n                                    placeholder='Iphone 12 pro max Gray'\r\n\r\n                                    onChange={(e) => { this.handleProductNameChange(e.target.value) }}\r\n                                    validators={{ required, minLength: minLength(3), maxLength: maxLength(50) }}\r\n                                />\r\n                                <Errors\r\n                                    className='form-error'\r\n                                    model='.productname'\r\n                                    show='touched'\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 3 character long ',\r\n                                        maxLength: 'Must be at most 50 character long '\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Label md={12} className='pl-0 pr-0' htmlFor='.price'>Price</Label>\r\n                            <Col md={6} className='pl-0 pr-0'>\r\n                                <Control.text model='.price'\r\n                                    id='price'\r\n                                    className='form-control'\r\n                                    placeholder='799'\r\n                                    onChange={(e) => { this.handlePriceChange(e.target.value) }}\r\n                                    validators={{ required, minLength: minLength(1), maxLength: maxLength(50) }}\r\n                                />\r\n                                <Errors\r\n                                    className='form-error'\r\n                                    model='.price'\r\n                                    show='touched'\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 1 character long ',\r\n                                        maxLength: 'Must be at most 50 character long '\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='form-group button-wrap'>\r\n                        <Label md={12} htmlFor='.pic' className='new-button'>Upload Image</Label>\r\n                        <Col md={4}>\r\n                            <Control.file model='.pic'\r\n                                id='pic'\r\n                                className='form-control'\r\n                                placeholder='upload image here'\r\n                                onChange={(e) => { this.handlePicChange(e.target.files[0]) }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {catogerylist.length !== 0 &&\r\n                            <div className='col-12'>\r\n                                <h6>Suggested Catogeries</h6>\r\n                                <div className='row review-tags'>\r\n                                    {catogerylist}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n                    <Row>\r\n                        {this.state.inputCatogeryList.length !== 0 &&\r\n                            <div className='col-12'>\r\n                                <h6>Selected Catogery</h6>\r\n                                <div className='row selected-tags'>\r\n                                    {selectedCatogeryList}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n                    <Row className='form-group'>\r\n                        <Label md={12} htmlFor='.catogeries'>Catogery</Label>\r\n                        <Col md={4}>\r\n                            <Control.textarea model='.catogeries'\r\n                                id='catogeries'\r\n                                className='form-control'\r\n                                placeholder='Search relevant catogeries here'\r\n                                rows='1'\r\n                                onChange={(e) => { this.handleCatogeryChange(e.target.value) }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {subcatogerylist.length !== 0 &&\r\n                            <div className='col-12'>\r\n                                <h6>Suggested Sub-Catogeries</h6>\r\n                                <div className='row review-tags'>\r\n                                    {subcatogerylist}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n                    <Row>\r\n                        {this.state.inputSubCatogeryList.length !== 0 &&\r\n                            <div className='col-12'>\r\n                                <h6>Selected Sub-Catogery</h6>\r\n                                <div className='row selected-tags'>\r\n                                    {selectedSubCatogeryList}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n                    <Row className='form-group'>\r\n                        <Label md={12} htmlFor='.subcatogeries'>Sub-Catogery</Label>\r\n                        <Col md={4}>\r\n                            <Control.textarea model='.subcatogeries'\r\n                                id='subcatogeries'\r\n                                className='form-control'\r\n                                placeholder='Search relevant Sub-catogeries here'\r\n                                rows='1'\r\n                                onChange={(e) => { this.handleSubCatogeryChange(e.target.value) }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='form-group'>\r\n                        <Label md={12} htmlFor='.description'>Description</Label>\r\n                        <Col md={12}>\r\n                            <ReactQuill\r\n                                theme='snow'\r\n                                onChange={this.handleDescriptionChange}\r\n                                modules={modules}\r\n                                formats={formats}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='form-group'>\r\n                        <Col md={12} className='feature-form'>\r\n                            <div className='row'>\r\n                                <div className='col-6 col-md-2 pr-0'>\r\n                                    <span className='feature-question m-auto'>Wants to feature ? </span>\r\n                                </div>\r\n                                <div className='col-6 pl-3 pl-md-0 pt-1 col-md-3'>\r\n                                    <Label className=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleFeatureChange} />\r\n                                        <span className=\"slider round\"></span>\r\n                                    </Label>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row>\r\n                        <Col md={{ size: 12 }} className='text-center pb-3'>\r\n                            <Button type='submit' color=\"primary\">Submit</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </div>\r\n            </LocalForm>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ProductForm);","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\ReviewsComponent.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286"],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\ActionCreaters.js",["287","288"],"import * as ActionTypes from './ActionTypes'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { history } from '../App'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//Reviews\r\n\r\nexport const addReviews = (reviews) => ({\r\n    type: ActionTypes.ADD_REVIEWS,\r\n    payload: reviews\r\n})\r\nexport const addReview = (review) => ({\r\n    type: ActionTypes.ADD_REVIEW,\r\n    payload: review\r\n})\r\nexport const removeReview = (review) => ({\r\n    type: ActionTypes.DELETE_REVIEW,\r\n    payload: review\r\n})\r\n\r\nexport const reviewsLoading = () => ({\r\n    type: ActionTypes.REVIEWS_LOADING\r\n})\r\nexport const reviewsFailed = (errMess) => ({\r\n    type: ActionTypes.REVIEWS_FAILED,\r\n    payload: errMess\r\n})\r\n\r\nexport const fetchReviews = () => (dispatch) => {\r\n    dispatch(reviewsLoading())\r\n    return fetch(`/reviews${window.location.search}`)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(reviews => {\r\n            dispatch(addReviews(reviews))\r\n        })\r\n        .catch(error => {\r\n            dispatch(reviewsFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const updateReview = (review) => ({\r\n    type: ActionTypes.UPDATE_REVIEW,\r\n    payload: review\r\n})\r\n\r\nexport const postLike = (reviewId) => (dispatch) => {\r\n    console.log(localStorage.getItem('jwt'))\r\n    return fetch('reviews/likes/' + reviewId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(review => {\r\n            dispatch(updateReview(review))\r\n            toast(\"Review Liked!\");\r\n        })\r\n        .catch(error => {\r\n            console.log('Put Like Review', error.message)\r\n            toast.error(\"like failed, Are you logged In?\");\r\n        })\r\n}\r\n\r\n\r\nexport const postDislike = (reviewId) => (dispatch) => {\r\n    return fetch('reviews/dislikes/' + reviewId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(review => {\r\n            dispatch(updateReview(review))\r\n            toast(\"Review Disliked!\");\r\n        })\r\n        .catch(error => {\r\n            console.log('Put Dislike Review', error.message)\r\n            toast.error(\"Dislike failed, Are you logged In?\");\r\n        })\r\n}\r\n\r\nexport const postReview = (rating, tags, review, product) => (dispatch) => {\r\n    var newReview = {\r\n        rating,\r\n        tags,\r\n        review,\r\n        product\r\n    }\r\n    console.log(newReview);\r\n    return fetch('reviews', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newReview),\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(review => {\r\n            if (!review.message) {\r\n                dispatch(addReview(review))\r\n                toast.success(\"Review Added!\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Post Review', error.message)\r\n            toast.error(\"Review didn't added, Are you logged In?\")\r\n        })\r\n}\r\n\r\nexport const editReview = (reviewId, rating, tags, review, product) => (dispatch) => {\r\n    var newReview = {\r\n        rating,\r\n        tags,\r\n        review,\r\n        product\r\n    }\r\n    console.log(newReview);\r\n    return fetch('reviews/' + reviewId, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newReview),\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(review => {\r\n            if (!review.message) {\r\n                dispatch(updateReview(review))\r\n                toast.success(\"Review Updated!\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Edit Product', error.message)\r\n            toast.error(\"Review Didn't Updated, Are you logged In?\");\r\n        })\r\n}\r\nexport const deleteReview = (reviewId) => (dispatch) => {\r\n    console.log(localStorage.getItem('jwt'))\r\n    return fetch('reviews/' + reviewId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(review => {\r\n            console.log(review)\r\n            dispatch(removeReview(review))\r\n            toast.dark(\"Review deleted!\");\r\n        })\r\n        .catch(error => {\r\n            console.log('Put Like Review', error.message)\r\n            toast.error(\"Deleting review failed, Are you logged In?\");\r\n        })\r\n}\r\n\r\n\r\n// products\r\nexport const addProducts = (products) => ({\r\n    type: ActionTypes.ADD_PRODUCTS,\r\n    payload: products\r\n})\r\nexport const addProduct = (product) => ({\r\n    type: ActionTypes.ADD_PRODUCT,\r\n    payload: product\r\n})\r\nexport const updateProduct = (product) => ({\r\n    type: ActionTypes.UPDATE_PRODUCT,\r\n    payload: product\r\n})\r\nexport const productsLoading = () => ({\r\n    type: ActionTypes.PRODUCTS_LOADING\r\n})\r\nexport const productsFailed = (errMess) => ({\r\n    type: ActionTypes.PRODUCTS_FAILED,\r\n    payload: errMess\r\n})\r\nexport const fetchProducts = () => (dispatch) => {\r\n    dispatch(productsLoading(true))\r\n    console.log(window.location.search)\r\n    return fetch(`/products${window.location.search}`)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(products => {\r\n            dispatch(addProducts(products))\r\n        })\r\n        .catch(error => {\r\n            dispatch(productsFailed(error.message))\r\n        })\r\n}\r\nexport const postProduct = (productName, price, catogery, subCatogery, description, featured, pic) => (dispatch) => {\r\n    var newProduct = {\r\n        productName,\r\n        price,\r\n        catogery,\r\n        subCatogery,\r\n        description,\r\n        featured,\r\n        pic\r\n    }\r\n    const data = new FormData()\r\n    data.append(\"file\", pic)\r\n    data.append(\"upload_preset\", \"instaclone\")\r\n    data.append(\"cloud_name\", \"sohil\")\r\n    return fetch(\"https://api.cloudinary.com/v1_1/sohil/image/upload\", {\r\n        method: \"post\",\r\n        body: data\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            newProduct.pic = data.url\r\n        })\r\n        .then(data => {\r\n            fetch('products', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newProduct),\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.ok)\r\n                        return response\r\n                    else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                        error.response = response\r\n                        throw error\r\n                    }\r\n                }, error => {\r\n                    var errMess = new Error(error.message)\r\n                    throw errMess\r\n                })\r\n                .then(response => response.json())\r\n                .then(product => {\r\n                    if (!product.message) {\r\n                        dispatch(addProduct(product))\r\n                        toast.success(\"Your Product is Added!\");\r\n                    }\r\n                })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\nexport const editProduct = (productId, productName, price, catogery, subCatogery, description, featured, pic) => (dispatch) => {\r\n    var newProduct = {\r\n        productName,\r\n        price,\r\n        catogery,\r\n        subCatogery,\r\n        description,\r\n        featured,\r\n        pic\r\n    }\r\n    const data = new FormData()\r\n    data.append(\"file\", pic)\r\n    data.append(\"upload_preset\", \"instaclone\")\r\n    data.append(\"cloud_name\", \"sohil\")\r\n    return fetch(\"https://api.cloudinary.com/v1_1/sohil/image/upload\", {\r\n        method: \"post\",\r\n        body: data\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            newProduct.pic = data.url\r\n        })\r\n        .then(data => {\r\n            fetch('products/' + productId, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(newProduct),\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.ok)\r\n                        return response\r\n                    else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                        error.response = response\r\n                        throw error\r\n                    }\r\n                }, error => {\r\n                    var errMess = new Error(error.message)\r\n                    throw errMess\r\n                })\r\n                .then(response => response.json())\r\n                .then(product => {\r\n                    if (!product.message) {\r\n                        dispatch(updateProduct(product))\r\n                        toast(\"Product Updated\");\r\n                    }\r\n                })\r\n        })\r\n        .catch(error => {\r\n            console.log('Edit Product', error.message)\r\n            toast.error(\"Editinf product failed, Are you logged In?\");\r\n        })\r\n}\r\n\r\n// User\r\nexport const addUser = (user) => ({\r\n    type: ActionTypes.ADD_USER,\r\n    payload: user\r\n})\r\nexport const userLoginFailed = (errMess) => ({\r\n    type: ActionTypes.USER_LOGIN_FAILED,\r\n    payload: errMess\r\n})\r\nexport const signUp = (name, email, password, fullname) => (dispatch) => {\r\n    const newUser = {\r\n        name,\r\n        email,\r\n        password,\r\n        fullname\r\n    }\r\n    return fetch('users/signup', {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\"\r\n        },\r\n        body: JSON.stringify(newUser)\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            history.push('/signin')\r\n            console.log(res.message)\r\n        })\r\n        .catch(error => {\r\n            dispatch(userLoginFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const signIn = (email, password) => (dispatch) => {\r\n    const loginUser = {\r\n        email,\r\n        password\r\n    }\r\n    console.log('reached at actionCreater' + loginUser)\r\n    return fetch('users/signin', {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\"\r\n        },\r\n        body: JSON.stringify(loginUser)\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            localStorage.setItem(\"jwt\", user.token)\r\n            console.log(localStorage.getItem(\"jwt\"))\r\n            dispatch(addUser(user))\r\n            history.push('/home')\r\n            toast.success(\"LogIn success!\");\r\n        })\r\n        .catch(error => {\r\n            dispatch(userLoginFailed(error.message))\r\n            toast.error(\"Login failed!\")\r\n        })\r\n}\r\nexport const fetchUser = () => (dispatch) => {\r\n    return fetch('users/userdata', {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            dispatch(addUser(user))\r\n            history.push('/home')\r\n            toast.success(\"LoggedIn!\");\r\n        })\r\n        .catch(error => {\r\n            dispatch(userLoginFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const clearUser = () => ({\r\n    type: ActionTypes.CLEAR_USER\r\n})\r\nexport const logout = () => (dispatch) => {\r\n    console.log('reached at logout Actioncreator.')\r\n    localStorage.clear()\r\n    console.log(\"Local Storage : \" + localStorage)\r\n    dispatch(clearUser())\r\n    toast.success(\"Logged out!\");\r\n}\r\n\r\n\r\n//company\r\nexport const addCompany = (company) => ({\r\n    type: ActionTypes.ADD_COMPANY,\r\n    payload: company\r\n})\r\nexport const companyLoginFailed = (errMess) => ({\r\n    type: ActionTypes.COMPANY_LOGIN_FAILED,\r\n    payload: errMess\r\n})\r\nexport const logoutCompany = () => (dispatch) => {\r\n    console.log('reached at logout Actioncreator.')\r\n    localStorage.clear()\r\n    console.log(\"Local Storage : \" + localStorage)\r\n    dispatch(clearCompany())\r\n}\r\nexport const clearCompany = () => ({\r\n    type: ActionTypes.CLEAR_COMPANY\r\n})\r\n\r\nexport const fetchCompany = () => (dispatch) => {\r\n    return fetch('company/companydata', {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(company => {\r\n            dispatch(addCompany(company))\r\n            history.push('/home')\r\n        })\r\n        .catch(error => {\r\n            dispatch(companyLoginFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const companySignUp = (name, email, password, fullname) => (dispatch) => {\r\n    const newCompany = {\r\n        name,\r\n        email,\r\n        password,\r\n        fullname\r\n    }\r\n    return fetch('/company/signup', {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\"\r\n        },\r\n        body: JSON.stringify(newCompany)\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            history.push('/company/signin')\r\n            console.log(res.message)\r\n        })\r\n        .catch(error => {\r\n            dispatch(companyLoginFailed(error.message))\r\n\r\n        })\r\n}\r\n\r\nexport const companySignIn = (email, password) => (dispatch) => {\r\n    const loginCompany = {\r\n        email,\r\n        password\r\n    }\r\n    console.log('reached at actionCreater' + loginCompany)\r\n    return fetch('/company/signin', {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json\"\r\n        },\r\n        body: JSON.stringify(loginCompany)\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + response.status + \" : \" + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(company => {\r\n            if (company.message) {\r\n                toast(\"Sorry, you are not verified yet. we will email you once you will verified\");\r\n            }\r\n            else {\r\n                localStorage.setItem(\"jwt\", company.token)\r\n                dispatch(addCompany(company))\r\n                console.log(company)\r\n                history.push('/home')\r\n                toast.success(\"LogIn as Company success!\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(companyLoginFailed(error.message))\r\n            toast.error(\"LogIn Failed!\");\r\n        })\r\n}","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\SidebarComponent.js",["289"],"import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { UncontrolledDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.changeRoute = this.changeRoute.bind(this)\r\n    }\r\n    changeRoute(catogery) {\r\n        const path = '/products?catogery=' + catogery\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Electronics'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-microchip pr-2'></i>Electronics</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Mobiles' className='sub-catogery'><li className=' list-unstyled' >Mobiles</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Computer-Pheripherals' className='sub-catogery'><li className=' list-unstyled' >Computer-Pheripherals</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/MobileAccessory' className='sub-catogery'><li className=' list-unstyled' >Mobile Accessory</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Powerbank' className='sub-catogery'><li className=' list-unstyled' >Powerbank</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Audio' className='sub-catogery'><li className=' list-unstyled' >Audio</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Gaming' className='sub-catogery'><li className=' list-unstyled' >Gaming</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Storage' className='sub-catogery'><li className=' list-unstyled' >Storage</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/LaptopAccessories' className='sub-catogery'><li className=' list-unstyled' >Laptop Accessories</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Camera' className='sub-catogery'><li className=' list-unstyled' >Camera</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Tablets' className='sub-catogery'><li className=' list-unstyled' >Tablets</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/SmartWearables' className='sub-catogery'><li className=' list-unstyled' >Smart Wearables</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/SmartHomeautomation' className='sub-catogery'><li className=' list-unstyled' >Smart Home automation</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/LaptopaAndDesktop' className='sub-catogery'><li className=' list-unstyled' >Laptop and Desktop</li></Link></DropdownItem>\r\n\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Appliances'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-television pr-2'></i>Appliances</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Televisions' className='sub-catogery'><li className=' list-unstyled' >Televisions</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/WashingMachines' className='sub-catogery'><li className=' list-unstyled' >Washing Machines</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/AirConditioners' className='sub-catogery'><li className=' list-unstyled' >Air Conditioners</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Refrigerators' className='sub-catogery'><li className=' list-unstyled' >Refrigerators</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/HomeApplicances' className='sub-catogery'><li className=' list-unstyled' >Home Applicances</li></Link></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Grocery'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-shopping-basket pr-2'></i>Grocery</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Dairy' className='sub-catogery'><li className=' list-unstyled' >Dairy</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Spices' className='sub-catogery'><li className=' list-unstyled' >Spices</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Beverages' className='sub-catogery'><li className=' list-unstyled' >Beverages</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/SoftDrinks' className='sub-catogery'><li className=' list-unstyled' >Soft Drinks</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Baking' className='sub-catogery'><li className=' list-unstyled' >Baking</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Oils' className='sub-catogery'><li className=' list-unstyled' >Oils</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Snacks' className='sub-catogery'><li className=' list-unstyled' >Snacks</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/FrozenFoods' className='sub-catogery'><li className=' list-unstyled' >Frozen Foods</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Breads' className='sub-catogery'><li className=' list-unstyled' >Breads</li></Link></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Fashion'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-heart pr-2'></i>Fashion</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Men' className='sub-catogery'><li className=' list-unstyled' >Men</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Women' className='sub-catogery'><li className=' list-unstyled' >Women</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Kids' className='sub-catogery'><li className=' list-unstyled' >Kids</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Jeans' className='sub-catogery'><li className=' list-unstyled' >Jeans</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Jacket' className='sub-catogery'><li className=' list-unstyled' >Jacket</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/T-shirt' className='sub-catogery'><li className=' list-unstyled' >T-shirt</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Shirt' className='sub-catogery'><li className=' list-unstyled' >Shirt</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Hoodie' className='sub-catogery'><li className=' list-unstyled' >Hoodie</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/GymClothes' className='sub-catogery'><li className=' list-unstyled' >Gym clothes</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Sunglasses' className='sub-catogery'><li className=' list-unstyled' >Sunglasses</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Shoes' className='sub-catogery'><li className=' list-unstyled' >Shoes</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Purse' className='sub-catogery'><li className=' list-unstyled' >Purse</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Belt' className='sub-catogery'><li className=' list-unstyled' >Belt</li></Link></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Restaurants'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-cutlery pr-2'></i>Restaurants</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Ethnic' className='sub-catogery'><li className=' list-unstyled' >Ethnic</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/FastFood' className='sub-catogery'><li className=' list-unstyled' >Fast Food</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/SnacksBar' className='sub-catogery'><li className=' list-unstyled' >Snacks Bar</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/CasualDining' className='sub-catogery'><li className=' list-unstyled' >Casual dining</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/FamilyStyle' className='sub-catogery'><li className=' list-unstyled' >Family style</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/FineDining' className='sub-catogery'><li className=' list-unstyled' >Fine dining</li></Link></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/hotel'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-bed pr-2'></i>Hotels</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Movies'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-film pr-2'></i>Movies</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Actions' className='sub-catogery'><li className=' list-unstyled' >Actions</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Comedies' className='sub-catogery'><li className=' list-unstyled' >Comedies</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Romantic' className='sub-catogery'><li className=' list-unstyled' >Romantic</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Adventure' className='sub-catogery'><li className=' list-unstyled' >Adventure</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Musicals' className='sub-catogery'><li className=' list-unstyled' >Musicals</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Drama' className='sub-catogery'><li className=' list-unstyled' >Drama</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Sci-Fi' className='sub-catogery'><li className=' list-unstyled' >Sci-Fi</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Horror' className='sub-catogery'><li className=' list-unstyled' >Horror</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/War' className='sub-catogery'><li className=' list-unstyled' >War</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Biopic' className='sub-catogery'><li className=' list-unstyled' >Biopic</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Animation' className='sub-catogery'><li className=' list-unstyled' >Animation</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Fantasy' className='sub-catogery'><li className=' list-unstyled' >Fantasy</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Thriller' className='sub-catogery'><li className=' list-unstyled' >Thriller</li></Link></DropdownItem>\r\n\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/music'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-music pr-2'></i>Music</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Books'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-book pr-2'></i>Books</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                                <DropdownItem><Link to='/products/subcatogery/Comedies' className='sub-catogery'><li className=' list-unstyled' >Comedies</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Romantic' className='sub-catogery'><li className=' list-unstyled' >Romantic</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Adventure' className='sub-catogery'><li className=' list-unstyled' >Adventure</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Musicals' className='sub-catogery'><li className=' list-unstyled' >Musicals</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Drama' className='sub-catogery'><li className=' list-unstyled' >Drama</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Sci-Fi' className='sub-catogery'><li className=' list-unstyled' >Sci-Fi</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Horror' className='sub-catogery'><li className=' list-unstyled' >Horror</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Biopic' className='sub-catogery'><li className=' list-unstyled' >Biopic</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Animation' className='sub-catogery'><li className=' list-unstyled' >Animation</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Fantasy' className='sub-catogery'><li className=' list-unstyled' >Fantasy</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Thriller' className='sub-catogery'><li className=' list-unstyled' >Thriller</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Study' className='sub-catogery'><li className=' list-unstyled' >Study</li></Link></DropdownItem>\r\n                                <DropdownItem><Link to='/products/subcatogery/Comic' className='sub-catogery'><li className=' list-unstyled' >Comic</li></Link></DropdownItem>\r\n\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/Medical'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-heartbeat pr-2'></i>Medical</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/education'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-graduation-cap pr-2'></i>Education</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/mobileapps'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-android pr-2'></i>Mobile Apps</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/travel'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-globe pr-2'></i>Travels</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className='row sidebar'>\r\n                    <div className='col-10 pl-0 pr-0'>\r\n                        <Link to='/products/catogery/airline'><li className='sidebar-list-item list-unstyled' ><i className='fa fa-plane pr-2'></i>Air line</li></Link>\r\n                    </div>\r\n                    <div className='col-2 p-0'>\r\n                        <UncontrolledDropdown >\r\n                            <DropdownToggle caret className='catogery-dropdown' />\r\n                            <DropdownMenu>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Sidebar)\r\n/*\r\nBlackish: #202020\r\n\r\nDark Grey: #3F3F3F\r\n\r\nMedium Grey: #707070\r\n\r\nEgg Yellow: #FFD6C\r\n\r\nWhite: #FFFFFF\r\n\r\n\r\n<div className='sidebar'>\r\n                <div className='sidebar-list'>\r\n                    <ul className='list-unstyled'>\r\n                        <Link to='/products/Electronics'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Electronics</li></Link>\r\n                        <Link to='/products/Home-Appliances'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Home-Appliances</li></Link>\r\n                        <Link to='/products/Grocery'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Grocery</li></Link>\r\n                        <Link to='/products/Books'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Books</li></Link>\r\n                        <Link to='/products/Entertainment'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Entertainment</li></Link>\r\n                        <Link to='/products/Other'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Other</li></Link>\r\n                        <Link to='/products/Electronics'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Electronics</li></Link>\r\n                        <Link to='/products/Home-Appliances'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Home-Appliances</li></Link>\r\n                        <Link to='/products/Grocery'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Grocery</li></Link>\r\n                        <Link to='/products/Books'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Books</li></Link>\r\n                        <Link to='/products/Entertainment'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Entertainment</li></Link>\r\n                        <Link to='/products/Other'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Other</li></Link>\r\n                        <Link to='/products/Electronics'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Electronics</li></Link>\r\n                        <Link to='/products/Home-Appliances'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Home-Appliances</li></Link>\r\n                        <Link to='/products/Grocery'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Grocery</li></Link>\r\n                        <Link to='/products/Books'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Books</li></Link>\r\n                        <Link to='/products/Entertainment'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Entertainment</li></Link>\r\n                        <Link to='/products/Other'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Other</li></Link>\r\n                        <Link to='/products/Electronics'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Electronics</li></Link>\r\n                        <Link to='/products/Home-Appliances'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Home-Appliances</li></Link>\r\n                        <Link to='/products/Grocery'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Grocery</li></Link>\r\n                        <Link to='/products/Books'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Books</li></Link>\r\n                        <Link to='/products/Entertainment'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Entertainment</li></Link>\r\n                        <Link to='/products/Other'><li className='sidebar-list-item' ><i className='fa fa-microchip pr-2'></i>Other</li></Link>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n*/","D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\LoadingComponent.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\redux\\ActionTypes.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\EditorComponent.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\shared\\baseUrl.js",[],"D:\\web_development\\coursera\\Review-project\\server\\client\\src\\components\\CompanyProfileComponent.js",[],{"ruleId":"290","severity":1,"message":"291","line":10,"column":10,"nodeType":"292","messageId":"293","endLine":10,"endColumn":16},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"290","severity":1,"message":"298","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":23},{"ruleId":"290","severity":1,"message":"298","line":2,"column":17,"nodeType":"292","messageId":"293","endLine":2,"endColumn":30},{"ruleId":"290","severity":1,"message":"299","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":19},{"ruleId":"290","severity":1,"message":"300","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":26,"column":29,"nodeType":"303","endLine":26,"endColumn":118},{"ruleId":"290","severity":1,"message":"304","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":2,"column":34,"nodeType":"292","messageId":"293","endLine":2,"endColumn":39},{"ruleId":"306","severity":1,"message":"307","line":31,"column":41,"nodeType":"303","endLine":36,"endColumn":43},{"ruleId":"306","severity":1,"message":"307","line":52,"column":41,"nodeType":"303","endLine":57,"endColumn":43},{"ruleId":"306","severity":1,"message":"307","line":73,"column":41,"nodeType":"303","endLine":78,"endColumn":43},{"ruleId":"290","severity":1,"message":"304","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":2,"column":34,"nodeType":"292","messageId":"293","endLine":2,"endColumn":39},{"ruleId":"290","severity":1,"message":"308","line":3,"column":38,"nodeType":"292","messageId":"293","endLine":3,"endColumn":46},{"ruleId":"306","severity":1,"message":"307","line":30,"column":41,"nodeType":"303","endLine":35,"endColumn":43},{"ruleId":"306","severity":1,"message":"307","line":50,"column":41,"nodeType":"303","endLine":55,"endColumn":43},{"ruleId":"306","severity":1,"message":"307","line":71,"column":41,"nodeType":"303","endLine":76,"endColumn":43},{"ruleId":"309","severity":1,"message":"310","line":31,"column":29,"nodeType":"303","endLine":31,"endColumn":118},{"ruleId":"309","severity":1,"message":"310","line":32,"column":29,"nodeType":"303","endLine":32,"endColumn":125},{"ruleId":"309","severity":1,"message":"310","line":33,"column":29,"nodeType":"303","endLine":33,"endColumn":135},{"ruleId":"309","severity":1,"message":"310","line":34,"column":29,"nodeType":"303","endLine":34,"endColumn":118},{"ruleId":"309","severity":1,"message":"310","line":35,"column":29,"nodeType":"303","endLine":35,"endColumn":145},{"ruleId":"309","severity":1,"message":"310","line":36,"column":29,"nodeType":"303","endLine":36,"endColumn":118},{"ruleId":"290","severity":1,"message":"304","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":3,"column":34,"nodeType":"292","messageId":"293","endLine":3,"endColumn":39},{"ruleId":"290","severity":1,"message":"311","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":24},{"ruleId":"290","severity":1,"message":"312","line":4,"column":26,"nodeType":"292","messageId":"293","endLine":4,"endColumn":31},{"ruleId":"290","severity":1,"message":"313","line":5,"column":30,"nodeType":"292","messageId":"293","endLine":5,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":28,"column":41,"nodeType":"303","endLine":33,"endColumn":43},{"ruleId":"290","severity":1,"message":"304","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":2,"column":34,"nodeType":"292","messageId":"293","endLine":2,"endColumn":39},{"ruleId":"306","severity":1,"message":"307","line":32,"column":41,"nodeType":"303","endLine":38,"endColumn":43},{"ruleId":"290","severity":1,"message":"314","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":23},{"ruleId":"290","severity":1,"message":"315","line":3,"column":25,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"316","line":3,"column":36,"nodeType":"292","messageId":"293","endLine":3,"endColumn":48},{"ruleId":"290","severity":1,"message":"317","line":3,"column":50,"nodeType":"292","messageId":"293","endLine":3,"endColumn":58},{"ruleId":"301","severity":1,"message":"302","line":22,"column":21,"nodeType":"303","endLine":22,"endColumn":114},{"ruleId":"290","severity":1,"message":"314","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":23},{"ruleId":"290","severity":1,"message":"315","line":3,"column":25,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"316","line":3,"column":36,"nodeType":"292","messageId":"293","endLine":3,"endColumn":48},{"ruleId":"290","severity":1,"message":"317","line":3,"column":50,"nodeType":"292","messageId":"293","endLine":3,"endColumn":58},{"ruleId":"301","severity":1,"message":"302","line":22,"column":21,"nodeType":"303","endLine":22,"endColumn":114},{"ruleId":"309","severity":1,"message":"310","line":8,"column":21,"nodeType":"303","endLine":8,"endColumn":137},{"ruleId":"301","severity":1,"message":"302","line":11,"column":33,"nodeType":"303","endLine":11,"endColumn":166},{"ruleId":"309","severity":1,"message":"310","line":16,"column":21,"nodeType":"303","endLine":16,"endColumn":120},{"ruleId":"301","severity":1,"message":"302","line":19,"column":33,"nodeType":"303","endLine":19,"endColumn":164},{"ruleId":"309","severity":1,"message":"310","line":24,"column":21,"nodeType":"303","endLine":24,"endColumn":147},{"ruleId":"301","severity":1,"message":"302","line":27,"column":33,"nodeType":"303","endLine":27,"endColumn":167},{"ruleId":"309","severity":1,"message":"310","line":32,"column":21,"nodeType":"303","endLine":32,"endColumn":122},{"ruleId":"301","severity":1,"message":"302","line":35,"column":33,"nodeType":"303","endLine":35,"endColumn":163},{"ruleId":"309","severity":1,"message":"310","line":40,"column":21,"nodeType":"303","endLine":40,"endColumn":121},{"ruleId":"301","severity":1,"message":"302","line":43,"column":33,"nodeType":"303","endLine":43,"endColumn":165},{"ruleId":"309","severity":1,"message":"310","line":48,"column":21,"nodeType":"303","endLine":48,"endColumn":128},{"ruleId":"301","severity":1,"message":"302","line":51,"column":33,"nodeType":"303","endLine":51,"endColumn":167},{"ruleId":"290","severity":1,"message":"318","line":3,"column":38,"nodeType":"292","messageId":"293","endLine":3,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":67,"column":33,"nodeType":"303","endLine":67,"endColumn":136},{"ruleId":"290","severity":1,"message":"311","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":24},{"ruleId":"290","severity":1,"message":"312","line":3,"column":26,"nodeType":"292","messageId":"293","endLine":3,"endColumn":31},{"ruleId":"290","severity":1,"message":"314","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":23},{"ruleId":"290","severity":1,"message":"315","line":3,"column":25,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"316","line":3,"column":36,"nodeType":"292","messageId":"293","endLine":3,"endColumn":48},{"ruleId":"290","severity":1,"message":"317","line":3,"column":50,"nodeType":"292","messageId":"293","endLine":3,"endColumn":58},{"ruleId":"290","severity":1,"message":"319","line":3,"column":106,"nodeType":"292","messageId":"293","endLine":3,"endColumn":109},{"ruleId":"290","severity":1,"message":"320","line":3,"column":111,"nodeType":"292","messageId":"293","endLine":3,"endColumn":116},{"ruleId":"290","severity":1,"message":"321","line":3,"column":118,"nodeType":"292","messageId":"293","endLine":3,"endColumn":127},{"ruleId":"290","severity":1,"message":"322","line":3,"column":129,"nodeType":"292","messageId":"293","endLine":3,"endColumn":132},{"ruleId":"290","severity":1,"message":"323","line":3,"column":134,"nodeType":"292","messageId":"293","endLine":3,"endColumn":139},{"ruleId":"290","severity":1,"message":"324","line":3,"column":141,"nodeType":"292","messageId":"293","endLine":3,"endColumn":150},{"ruleId":"290","severity":1,"message":"325","line":3,"column":152,"nodeType":"292","messageId":"293","endLine":3,"endColumn":163},{"ruleId":"290","severity":1,"message":"326","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":19},{"ruleId":"290","severity":1,"message":"327","line":5,"column":21,"nodeType":"292","messageId":"293","endLine":5,"endColumn":28},{"ruleId":"290","severity":1,"message":"313","line":5,"column":30,"nodeType":"292","messageId":"293","endLine":5,"endColumn":36},{"ruleId":"290","severity":1,"message":"328","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":14},{"ruleId":"290","severity":1,"message":"300","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":18},{"ruleId":"290","severity":1,"message":"329","line":9,"column":10,"nodeType":"292","messageId":"293","endLine":9,"endColumn":19},{"ruleId":"290","severity":1,"message":"330","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"331","line":13,"column":8,"nodeType":"292","messageId":"293","endLine":13,"endColumn":14},{"ruleId":"290","severity":1,"message":"332","line":14,"column":8,"nodeType":"292","messageId":"293","endLine":14,"endColumn":19},{"ruleId":"290","severity":1,"message":"333","line":17,"column":7,"nodeType":"292","messageId":"293","endLine":17,"endColumn":16},{"ruleId":"290","severity":1,"message":"334","line":18,"column":7,"nodeType":"292","messageId":"293","endLine":18,"endColumn":16},{"ruleId":"290","severity":1,"message":"335","line":19,"column":7,"nodeType":"292","messageId":"293","endLine":19,"endColumn":15},{"ruleId":"301","severity":1,"message":"302","line":356,"column":21,"nodeType":"303","endLine":356,"endColumn":114},{"ruleId":"290","severity":1,"message":"314","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":23},{"ruleId":"290","severity":1,"message":"315","line":3,"column":25,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"316","line":3,"column":36,"nodeType":"292","messageId":"293","endLine":3,"endColumn":48},{"ruleId":"290","severity":1,"message":"317","line":3,"column":50,"nodeType":"292","messageId":"293","endLine":3,"endColumn":58},{"ruleId":"290","severity":1,"message":"328","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":14},{"ruleId":"290","severity":1,"message":"330","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":157,"column":37,"nodeType":"303","endLine":164,"endColumn":39},{"ruleId":"306","severity":1,"message":"307","line":180,"column":37,"nodeType":"303","endLine":187,"endColumn":39},{"ruleId":"306","severity":1,"message":"336","line":223,"column":37,"nodeType":"303","endLine":229,"endColumn":107},{"ruleId":"306","severity":1,"message":"336","line":255,"column":37,"nodeType":"303","endLine":261,"endColumn":110},{"ruleId":"301","severity":1,"message":"302","line":319,"column":21,"nodeType":"303","endLine":319,"endColumn":114},{"ruleId":"290","severity":1,"message":"337","line":2,"column":22,"nodeType":"292","messageId":"293","endLine":2,"endColumn":26},{"ruleId":"290","severity":1,"message":"299","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":19},{"ruleId":"290","severity":1,"message":"338","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":14},{"ruleId":"290","severity":1,"message":"314","line":4,"column":16,"nodeType":"292","messageId":"293","endLine":4,"endColumn":23},{"ruleId":"290","severity":1,"message":"315","line":4,"column":25,"nodeType":"292","messageId":"293","endLine":4,"endColumn":34},{"ruleId":"290","severity":1,"message":"316","line":4,"column":36,"nodeType":"292","messageId":"293","endLine":4,"endColumn":48},{"ruleId":"290","severity":1,"message":"317","line":4,"column":50,"nodeType":"292","messageId":"293","endLine":4,"endColumn":58},{"ruleId":"290","severity":1,"message":"339","line":4,"column":68,"nodeType":"292","messageId":"293","endLine":4,"endColumn":76},{"ruleId":"290","severity":1,"message":"340","line":4,"column":78,"nodeType":"292","messageId":"293","endLine":4,"endColumn":92},{"ruleId":"290","severity":1,"message":"341","line":4,"column":94,"nodeType":"292","messageId":"293","endLine":4,"endColumn":104},{"ruleId":"290","severity":1,"message":"323","line":4,"column":134,"nodeType":"292","messageId":"293","endLine":4,"endColumn":139},{"ruleId":"290","severity":1,"message":"324","line":4,"column":141,"nodeType":"292","messageId":"293","endLine":4,"endColumn":150},{"ruleId":"290","severity":1,"message":"325","line":4,"column":152,"nodeType":"292","messageId":"293","endLine":4,"endColumn":163},{"ruleId":"290","severity":1,"message":"342","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":17},{"ruleId":"290","severity":1,"message":"328","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":14},{"ruleId":"290","severity":1,"message":"329","line":10,"column":10,"nodeType":"292","messageId":"293","endLine":10,"endColumn":19},{"ruleId":"290","severity":1,"message":"330","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":14},{"ruleId":"290","severity":1,"message":"343","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":20},{"ruleId":"290","severity":1,"message":"331","line":14,"column":8,"nodeType":"292","messageId":"293","endLine":14,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":220,"column":33,"nodeType":"303","endLine":227,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":243,"column":33,"nodeType":"303","endLine":249,"endColumn":35},{"ruleId":"306","severity":1,"message":"344","line":266,"column":29,"nodeType":"303","endLine":270,"endColumn":97},{"ruleId":"306","severity":1,"message":"336","line":296,"column":29,"nodeType":"303","endLine":301,"endColumn":99},{"ruleId":"306","severity":1,"message":"336","line":327,"column":29,"nodeType":"303","endLine":332,"endColumn":102},{"ruleId":"290","severity":1,"message":"338","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":14},{"ruleId":"290","severity":1,"message":"314","line":6,"column":16,"nodeType":"292","messageId":"293","endLine":6,"endColumn":23},{"ruleId":"290","severity":1,"message":"317","line":6,"column":25,"nodeType":"292","messageId":"293","endLine":6,"endColumn":33},{"ruleId":"290","severity":1,"message":"315","line":6,"column":35,"nodeType":"292","messageId":"293","endLine":6,"endColumn":44},{"ruleId":"290","severity":1,"message":"316","line":6,"column":46,"nodeType":"292","messageId":"293","endLine":6,"endColumn":58},{"ruleId":"290","severity":1,"message":"339","line":6,"column":60,"nodeType":"292","messageId":"293","endLine":6,"endColumn":68},{"ruleId":"290","severity":1,"message":"313","line":7,"column":30,"nodeType":"292","messageId":"293","endLine":7,"endColumn":36},{"ruleId":"290","severity":1,"message":"345","line":12,"column":10,"nodeType":"292","messageId":"293","endLine":12,"endColumn":18},{"ruleId":"290","severity":1,"message":"346","line":12,"column":20,"nodeType":"292","messageId":"293","endLine":12,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":24,"column":14,"nodeType":"292","messageId":"349","endLine":24,"endColumn":15},{"ruleId":"290","severity":1,"message":"333","line":30,"column":7,"nodeType":"292","messageId":"293","endLine":30,"endColumn":16},{"ruleId":"290","severity":1,"message":"334","line":31,"column":7,"nodeType":"292","messageId":"293","endLine":31,"endColumn":16},{"ruleId":"290","severity":1,"message":"335","line":32,"column":7,"nodeType":"292","messageId":"293","endLine":32,"endColumn":15},{"ruleId":"290","severity":1,"message":"350","line":114,"column":17,"nodeType":"292","messageId":"293","endLine":114,"endColumn":23},{"ruleId":"306","severity":1,"message":"336","line":162,"column":37,"nodeType":"303","endLine":167,"endColumn":102},{"ruleId":"351","severity":1,"message":"352","line":275,"column":5,"nodeType":"353","messageId":"354","endLine":277,"endColumn":6},{"ruleId":"301","severity":1,"message":"302","line":295,"column":25,"nodeType":"303","endLine":295,"endColumn":113},{"ruleId":"290","severity":1,"message":"355","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":17},{"ruleId":"290","severity":1,"message":"311","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":24},{"ruleId":"290","severity":1,"message":"356","line":3,"column":32,"nodeType":"292","messageId":"293","endLine":3,"endColumn":40},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["357"],"no-negated-in-lhs",["358"],"'BrowserRouter' is defined but never used.","'queryString' is defined but never used.","'ReactQuill' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Form' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","'controls' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Errors' is defined but never used.","'CardImg' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'CardText' is defined but never used.","'Media' is defined but never used.","'Row' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'LocalForm' is defined but never used.","'Control' is defined but never used.","'moment' is defined but never used.","'ImageDrop' is defined but never used.","'Parser' is defined but never used.","'Editor' is defined but never used.","'ProductForm' is defined but never used.","'minLength' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'required' is assigned a value but never used.","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Link' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Breadcrumb' is defined but never used.","'Loading' is defined but never used.","'ReactTooltip' is defined but never used.","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'postLike' is defined but never used.","'postDislike' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'rating' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'baseUrl' is defined but never used.","'Dropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]